{"hash":"8ec2d2d769250ada18e8c764b3b6b292cc183178","data":{"markdownPage":{"id":"9d8ef1ddf7ceeab16690f0d3eb5f2b84","title":"Data Projection with CQRS","description":"","path":"/development/kafka-manual-commit/","timeToRead":1,"content":"<h1 id=\"data-projection-with-cqrs\"><a href=\"#data-projection-with-cqrs\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Data Projection with CQRS</h1>\n<h1 id=\"data-projection-with-cqrs-1\"><a href=\"#data-projection-with-cqrs-1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Data Projection with CQRS</h1>\n<h3 id=\"cqrs-모델링-practice\"><a href=\"#cqrs-%EB%AA%A8%EB%8D%B8%EB%A7%81-practice\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>CQRS 모델링 Practice</h3>\n<ul>\n<li>주문서비스와 배송서비스의 상세 모델을 참조하여 Query 모델(Materialized View)을 설계한다.</li>\n</ul>\n<h4 id=\"scenario\"><a href=\"#scenario\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>SCENARIO</h4>\n<ul>\n<li>고객센터팀이 신설되어 '마이페이지' 서비스를 런칭한다.</li>\n</ul>\n<h4 id=\"modeling\"><a href=\"#modeling\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>MODELING</h4>\n<ul>\n<li>customercenter BC 를 추가</li>\n<li>Read Model 녹색 스티커 추가('MyPage')</li>\n<li>\n<p>Read Model 속성 Define</p>\n<blockquote>\n<p>orderId\nproductId\ndeliveryStatus\norderStatus</p>\n</blockquote>\n</li>\n</ul>\n<img width=\"982\" alt=\"image\" src=\"https://user-images.githubusercontent.com/487999/191055790-5d6a529f-e2f7-49ab-8ee0-74d371f06090.png\">\n<ul>\n<li>Read Model CRUD 상세설계</li>\n</ul>\n<img width=\"434\" alt=\"image\" src=\"https://user-images.githubusercontent.com/487999/191056403-fbdec62b-42ea-4261-8e4e-b631c6c6779a.png\">\n<h4 id=\"code-preview\"><a href=\"#code-preview\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Code Preview</h4>\n<ul>\n<li>상세 설계가 끝난 View Model 코드를 리뷰한다.</li>\n</ul>\n<h4 id=\"실행\"><a href=\"#%EC%8B%A4%ED%96%89\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>실행</h4>\n<ul>\n<li>customer-center 에 오류가 발생한다면 다음 ViewHandler.java 부분의 구현체를 확인: (findByOrderId --> findById)</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">    @StreamListener(KafkaProcessor.INPUT)\n    public void whenDeliveryStarted_then_UPDATE_1(@Payload DeliveryStarted deliveryStarted) {\n        try {\n            if (!deliveryStarted.validate()) return;\n                // view 객체 조회\n            Optional&lt;MyPage&gt; myPageOptional = myPageRepository.findById(deliveryStarted.getOrderId());\n\n            if( myPageOptional.isPresent()) {\n                 MyPage myPage = myPageOptional.get();\n            // view 객체에 이벤트의 eventDirectValue 를 set 함\n                myPage.setDeliveryStatus(&quot;Started&quot;);    \n                // view 레파지 토리에 save\n                 myPageRepository.save(myPage);\n                }\n\n\n        }catch (Exception e){\n            e.printStackTrace();\n        }\n    }</code></pre>\n<ul>\n<li>주문 1건을 등록한 후, MyPage 의 내용을 확인한다</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">http :8081/orders productId=1 qty=1\nhttp :8084/myPages</code></pre>\n<ul>\n<li>배송서비스를 기동한 후, MyPage 의 내용을 확인한다.</li>\n<li>배송서비스를 죽인 후, MyPage 의 내용을 확인하여도 서비스가 안정적임을 확인한다. </li>\n</ul>\n","sidebar":"business","next":"","prev":"","headings":[{"depth":1,"value":"Data Projection with CQRS","anchor":"#data-projection-with-cqrs"},{"depth":1,"value":"Data Projection with CQRS","anchor":"#data-projection-with-cqrs-1"},{"depth":3,"value":"CQRS 모델링 Practice","anchor":"#cqrs-모델링-practice"},{"depth":4,"value":"SCENARIO","anchor":"#scenario"},{"depth":4,"value":"MODELING","anchor":"#modeling"},{"depth":4,"value":"Code Preview","anchor":"#code-preview"},{"depth":4,"value":"실행","anchor":"#실행"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/operations/ops-service/","title":"12번가 마이크로서비스 라우터(Service) 적용"}},{"node":{"path":"/operations/ops-utility/","title":"쿠버네티스 유틸리티"}},{"node":{"path":"/operations/ops-persistence-volume/","title":"파일시스템 (볼륨) 연결과 데이터베이스 설정"}},{"node":{"path":"/operations/ops-service-mesh-istio/","title":"[Service Mesh] Istio"}},{"node":{"path":"/operations/ops-readiness/","title":"무정지 배포 실습"}},{"node":{"path":"/operations/ops-kubernetes/","title":"Kubernetes Basic Commands"}},{"node":{"path":"/operations/ops-liveness/","title":"셀프힐링 실습"}},{"node":{"path":"/operations/ops-aws-setting/","title":"AWS Cloud Setup(EKS, ECR 설정)"}},{"node":{"path":"/operations/ops-ingress-virtualhost/","title":"Ingress - Virtual Host based"}},{"node":{"path":"/operations/ops-anatomy-kubernetes/","title":"쿠버네티스 내부구조 분석"}},{"node":{"path":"/operations/ops-ingress/","title":"Ingress 를 통한 진입점 통일 - Path-based routing"}},{"node":{"path":"/operations/ops-autoscale/","title":"Pod Auto Scaling"}},{"node":{"path":"/operations/ops-deploy-my-app/","title":"애플리케이션 패키징,도커라이징,클러스터 배포"}},{"node":{"path":"/operations/msa-logging/","title":"MSA 로깅 with EFK Stack"}},{"node":{"path":"/operations/k8s-monitoring/","title":"MSA 모니터링 with installing Grafana"}},{"node":{"path":"/operations/ops-argo-rollout-canary-istio/","title":"[GitOps] Argo Rollout 와 Istio 를 통한 카나리 배포"}},{"node":{"path":"/operations/istio-msa-telemetry/","title":"[Service Mesh] MSA 모니터링 w/ Istio addon Grafana"}},{"node":{"path":"/operations/istio-resiliency-part2/","title":"[Service Mesh] Istio 를 통한 서비스 회복성 Part2 - 서킷브레이커"}},{"node":{"path":"/operations/istio-traffic/","title":"[Service Mesh] Istio 를 통한 동적 트래픽 라우팅"}},{"node":{"path":"/operations/istio-resiliency-part1/","title":"[Service Mesh] Istio 를 통한 서비스 회복성 Part1 - 타임아웃/재시도"}},{"node":{"path":"/operations/azure/","title":"Azure Cloud Setup (AKS, ACR 설정)"}},{"node":{"path":"/operations/istio-metric-based-hpa/","title":"[Service Mesh] Istio Metrics based HPA"}},{"node":{"path":"/development/keycloak-oauth2-2/","title":"Pub/Sub 방식의 연동 (New)"}},{"node":{"path":"/operations/gitops-argo-cd/","title":"[GitOps] Argo CD 를 통한 카나리 배포"}},{"node":{"path":"/operations/end-to-end/","title":"12번가 전체 마이크로서비스의 배포"}},{"node":{"path":"/operations/apply-security/","title":"12번가 Mall에 토큰인증 적용하기"}},{"node":{"path":"/development/oauth2withkeycloak/","title":"Req/Res 방식에서 장애전파 차단 - 서킷브레이커 (New)"}},{"node":{"path":"/development/keycloak-oauth2-3/","title":"Pub/Sub 방식의 연동 - Compensation 과 Correlation (New)"}},{"node":{"path":"/development/oauth2/","title":"Req/Res 방식의 MSA 연동 (New)"}},{"node":{"path":"/development/monolith2misvc/","title":"Kafka Retry & Dead Letter Queue (New)"}},{"node":{"path":"/development/kafka-retry-dlq/","title":"Application Packaging with Container (Docker)"}},{"node":{"path":"/development/gateway/","title":"단위 마이크로 서비스의 실행 (New)"}},{"node":{"path":"/development/kafka-manual-commit/","title":"Data Projection with CQRS"}},{"node":{"path":"/development/keycloak-oauth2-1/","title":"Kafka 기본 명령어 (New)"}},{"node":{"path":"/development/kafka-scaling/","title":"Data Projection with GraphQL"}},{"node":{"path":"/development/cna-pubsub/","title":"JWT Token 기반 인증 인가 - Advanced"}},{"node":{"path":"/development/kafka-base/","title":"JWT Token 기반 인증 인가"}},{"node":{"path":"/development/cna-pubsub2/","title":"Data Projection with Frontend and HATEOAS"}},{"node":{"path":"/development/front-end/","title":"Kafka Scaling (New)"}},{"node":{"path":"/development/circuitbreaker/","title":"API Gateway"}},{"node":{"path":"/business/","title":"[분석] DDD 이벤트의 도출 - 12번가 쇼핑몰"}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"[이벤트스토밍] DDD Food Delivery 예제"}},{"node":{"path":"/development/advanced-connect/","title":"Contract Test (Consumer Driven Test)"}},{"node":{"path":"/business/ddd-google-drive/","title":"[이벤트스토밍] DDD 구글 드라이브 예제"}}]}},"context":{}}