{"hash":"70daf0702732bebfabe4090caf1cfcfa2eddd102","data":{"markdownPage":{"id":"252f6ccdbd5666d2c445a17485eb48d0","title":"[구현] 데이터프로젝션-CQRS","description":"","path":"/development/dp-cqrs/","timeToRead":1,"content":"<h1 id=\"구현-데이터프로젝션-cqrs\"><a href=\"#%EA%B5%AC%ED%98%84-%EB%8D%B0%EC%9D%B4%ED%84%B0%ED%94%84%EB%A1%9C%EC%A0%9D%EC%85%98-cqrs\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>[구현] 데이터프로젝션-CQRS</h1>\n<h3 id=\"cqrs-패턴에-의한-데이터-통합\"><a href=\"#cqrs-%ED%8C%A8%ED%84%B4%EC%97%90-%EC%9D%98%ED%95%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%86%B5%ED%95%A9\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>CQRS 패턴에 의한 데이터 통합</h3>\n<ul>\n<li>개요 참조</li>\n<li><a href=\"http://www.msaschool.io/operation/integration/integration-six/\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.msaschool.io/operation/integration/integration-six/</a></li>\n<li>order 서비스(8081)와 delivery 서비스(8082)를 실행한다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">cd order\nmvn spring-boot:run\ncd delivery\nmvn spring-boot:run</code></pre>\n<ul>\n<li>orderView 서비스는 모든 이벤트를 수신하여 자신만의 view table 을 구성하는 서비스이다.</li>\n<li>orderView 서비스의 PolicyHandler.java 의 로직을 확인한다.</li>\n<li>주문을 발송하여 이벤트를 발생시킨다.\n- 주문 발송\n<code>http localhost:8081/orders productId=1 productName=\"TV\" qty=3</code></li>\n<li>카프카에서 이벤트를 확인 한다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">/usr/local/kafka/bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic shopmall --from-beginning</code></pre>\n<ul>\n<li>orderView 서비스를 실행한다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">cd orderView\nmvn spring-boot:run</code></pre>\n<ul>\n<li>orderView의 Query Model을 통해 주문상태와 배송상태를 통합 조회한다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">http localhost:8090/orderStatuses</code></pre>\n<h4 id=\"compensation-trx-발행\"><a href=\"#compensation-trx-%EB%B0%9C%ED%96%89\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Compensation Trx 발행</h4>\n<ul>\n<li>주문 취소</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">http DELETE localhost:8081/orders/1</code></pre>\n<ul>\n<li>주문상태와 배송상태 값을 확인</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">http localhost:8090/orderStatuses</code></pre>\n<h4 id=\"compensation-trx을-query모델에-반영\"><a href=\"#compensation-trx%EC%9D%84-query%EB%AA%A8%EB%8D%B8%EC%97%90-%EB%B0%98%EC%98%81\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Compensation Trx을 Query모델에 반영</h4>\n<ul>\n<li>OrderView에 Compensation Logic에 대해서도 Tracking 되도록 코드를 보완 하세요.</li>\n<li>OrderView의 PolicyHandler.java  수정</li>\n</ul>\n<h4 id=\"service-clear\"><a href=\"#service-clear\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Service Clear</h4>\n<ul>\n<li>다음 Lab을 위해 기동된 모든 서비스 종료</li>\n<li>8090 및 808x의 모든 Process Kill</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">fuser -k 8090/tcp\nkill -9 `netstat -lntp|grep 808|awk &#39;{ print $7 }&#39;|grep -o &#39;[0-9]*&#39;`</code></pre>\n","sidebar":"business","next":"","prev":"","headings":[{"depth":1,"value":" 데이터프로젝션-CQRS","anchor":"#구현-데이터프로젝션-cqrs"},{"depth":3,"value":"CQRS 패턴에 의한 데이터 통합","anchor":"#cqrs-패턴에-의한-데이터-통합"},{"depth":4,"value":"Compensation Trx 발행","anchor":"#compensation-trx-발행"},{"depth":4,"value":"Compensation Trx을 Query모델에 반영","anchor":"#compensation-trx을-query모델에-반영"},{"depth":4,"value":"Service Clear","anchor":"#service-clear"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/operations/ops-utility/","title":"쿠버네티스 유틸리티"}},{"node":{"path":"/operations/ops-readiness/","title":"무정지 배포 실습"}},{"node":{"path":"/operations/ops-service-mesh-istio/","title":"[Service Mesh] Istio"}},{"node":{"path":"/development/keycloak-oauth2-3/","title":"Fine grained RBAC w/ Resource Server"}},{"node":{"path":"/development/kafka-manual-commit/","title":"Kafka 수동커밋"}},{"node":{"path":"/operations/ops-persistence-volume/","title":"파일시스템 (볼륨) 연결과 데이터베이스 설정"}},{"node":{"path":"/operations/ops-ingress/","title":"Ingress 를 통한 진입점 통일 - Path-based routing"}},{"node":{"path":"/operations/ops-liveness/","title":"셀프힐링 실습"}},{"node":{"path":"/operations/ops-kubernetes/","title":"Kubernetes Basic Commands"}},{"node":{"path":"/operations/msa-logging/","title":"MSA 로깅 with EFK Stack"}},{"node":{"path":"/operations/ops-ingress-virtualhost/","title":"Ingress - Virtual Host based"}},{"node":{"path":"/operations/ops-deploy-my-app/","title":"애플리케이션 패키징,도커라이징,클러스터 배포"}},{"node":{"path":"/operations/ops-aws-setting/","title":"AWS Cloud Setup(EKS, ECR 설정)"}},{"node":{"path":"/operations/ops-autoscale/","title":"Pod Auto Scaling"}},{"node":{"path":"/operations/ops-argo-rollout-canary-istio/","title":"[GitOps] Argo Rollout 와 Istio 를 통한 카나리 배포"}},{"node":{"path":"/operations/ops-anatomy-kubernetes/","title":"쿠버네티스 내부구조 분석"}},{"node":{"path":"/operations/istio-traffic/","title":"[Service Mesh] Istio 를 통한 동적 트래픽 라우팅"}},{"node":{"path":"/operations/k8s-monitoring/","title":"MSA 모니터링 with installing Grafana"}},{"node":{"path":"/operations/istio-resiliency-part2/","title":"[Service Mesh] Istio 를 통한 서비스 회복성 Part2 - 서킷브레이커"}},{"node":{"path":"/operations/istio-resiliency-part1/","title":"[Service Mesh] Istio 를 통한 서비스 회복성 Part1 - 타임아웃/재시도"}},{"node":{"path":"/operations/istio-msa-telemetry/","title":"[Service Mesh] MSA 모니터링 w/ Istio addon Grafana"}},{"node":{"path":"/operations/end-to-end/","title":"12번가 전체 마이크로서비스의 배포"}},{"node":{"path":"/operations/gitops-argo-cd/","title":"[GitOps] Argo CD 를 통한 카나리 배포"}},{"node":{"path":"/operations/azure/","title":"Azure Cloud Setup (AKS, ACR 설정)"}},{"node":{"path":"/development/ops-docker/","title":"[빌드] Docker Image Build & Push"}},{"node":{"path":"/development/oauth2withkeycloak/","title":"JWT토큰 기반 인증인가 w/ Keycloak Authz-svr"}},{"node":{"path":"/development/oauth2/","title":"JWT토큰 기반 인증인가 w/ Spring Authz-svr"}},{"node":{"path":"/development/kafka-scaling/","title":"Kafka 스케일링"}},{"node":{"path":"/development/monolith2misvc/","title":"[구현] Req/Res 방식의 MSA 연동"}},{"node":{"path":"/development/keycloak-oauth2-2/","title":"Keycloak OIDC w/ OAuth2 Client"}},{"node":{"path":"/development/keycloak-oauth2-1/","title":"Keycloak Authorization 서버 설정"}},{"node":{"path":"/development/kafka-retry-dlq/","title":"Retry & Dead Letter Queue"}},{"node":{"path":"/development/kafka-base/","title":"[pre-lab] 카프카 연습"}},{"node":{"path":"/development/front-end/","title":"프론트엔드 개발"}},{"node":{"path":"/development/gateway/","title":"[구현] 게이트웨이를 통한 진입점 통일"}},{"node":{"path":"/development/dp-graphql/","title":"[구현] 데이터프로젝션-GraphQL"}},{"node":{"path":"/development/dp-cqrs/","title":"[구현] 데이터프로젝션-CQRS"}},{"node":{"path":"/development/dp-composite-svc/","title":"[구현] 데이터프로젝션-컴포지트서비스"}},{"node":{"path":"/development/cqrs-modeling/","title":"[pre-lab] CQRS 샘플 모델링"}},{"node":{"path":"/development/contract-test/","title":"[테스트] Consumer Driven Test 기반 Contract Test"}},{"node":{"path":"/development/cna-start/","title":"[구현] 마이크로서비스의 실행"}},{"node":{"path":"/development/cna-pubsub2/","title":"[구현] Pub/Sub - Compensation and Correlation"}},{"node":{"path":"/development/circuitbreaker/","title":"[구현] Req/Res 방식에서 장애전파 차단(서킷브레이커 패턴)"}},{"node":{"path":"/development/capstone-project-2/","title":"[Capstone Prj.] Simple Mall - Implementation"}},{"node":{"path":"/development/cna-pubsub/","title":"[구현] Pub/Sub 방식의 MSA 연동"}},{"node":{"path":"/development/capstone-project-1/","title":"[Capstone Prj.] Simple Mall - Scenario/Modeling"}},{"node":{"path":"/business/zero-based-cna/","title":"[설계] ES모델 기반 Inner 아키텍처 이해"}},{"node":{"path":"/development/advanced-connect/","title":"Kafka Connect"}},{"node":{"path":"/business/","title":"[분석] DDD 이벤트의 도출 - 12번가 쇼핑몰"}},{"node":{"path":"/business/ddd-google-drive/","title":"[이벤트스토밍] DDD 구글 드라이브 예제"}},{"node":{"path":"/business/collaborative-eventstorming/","title":"[이벤트스토밍] Collaborative Eventstorming"}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"[이벤트스토밍] DDD Food Delivery 예제"}},{"node":{"path":"/business/design-to-code/","title":"[설계] ES모델기반 템플릿 코드 분석"}}]}},"context":{}}