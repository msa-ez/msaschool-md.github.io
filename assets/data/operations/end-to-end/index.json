{"hash":"82edfc9c503203a4b89aaf7ee02c1b0930a87be2","data":{"markdownPage":{"id":"355b6da5e57969632bb942e4c1ef413c","title":"12번가 전체 마이크로서비스의 배포","description":"","path":"/operations/end-to-end/","timeToRead":3,"content":"<h1 id=\"12번가-전체-마이크로서비스의-배포\"><a href=\"#12%EB%B2%88%EA%B0%80-%EC%A0%84%EC%B2%B4-%EB%A7%88%EC%9D%B4%ED%81%AC%EB%A1%9C%EC%84%9C%EB%B9%84%EC%8A%A4%EC%9D%98-%EB%B0%B0%ED%8F%AC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>12번가 전체 마이크로서비스의 배포</h1>\n<h3 id=\"개발기에서-전체-시스템-무작정-따라하기\"><a href=\"#%EA%B0%9C%EB%B0%9C%EA%B8%B0%EC%97%90%EC%84%9C-%EC%A0%84%EC%B2%B4-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EB%AC%B4%EC%9E%91%EC%A0%95-%EB%94%B0%EB%9D%BC%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>개발기에서 전체 시스템 무작정 따라하기</h3>\n<h4 id=\"프론트엔드\"><a href=\"#%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>프론트엔드</h4>\n<p>새 터미널을 열고 아래 입력:</p>\n<pre class=\"language-text\"><code class=\"language-text\">git clone https://github.com/event-storming/ui.git\ncd ui\nnpm install\nnpm run serve</code></pre>\n<ol>\n<li>Labs 메뉴 > 포트열기 > 8080</li>\n<li>12 번가 메인 화면을 확인</li>\n<li>백엔드 마이크로 서비스들이 필요하기 아무런 동작을 하지 않음</li>\n</ol>\n<p>도커빌드 후 쿠버네티스에 반영하기</p>\n<pre class=\"language-text\"><code class=\"language-text\">npm run build\ndocker build -t &lt;계정명&gt;/ui:stable .\ndocker push &lt;이미지명&gt;</code></pre>\n<h4 id=\"상품-서비스\"><a href=\"#%EC%83%81%ED%92%88-%EC%84%9C%EB%B9%84%EC%8A%A4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>상품 서비스</h4>\n<ul>\n<li>새 터미널을 열고 아래 입력:</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">cd ~ \ngit clone https://github.com/event-storming/products.git\ncd products\nmvn spring-boot:run</code></pre>\n<ul>\n<li>서비스가 모두 올라올때까지 대기</li>\n<li>새 터미널을 열고 다음명령 입력:</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">http localhost:8085/products</code></pre>\n<ul>\n<li>상품 정보들을 확인:</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">{\n  &quot;_embedded&quot; : {\n    &quot;products&quot; : [ {\n      &quot;@id&quot; : 1,\n      &quot;name&quot; : &quot;TV&quot;,\n      &quot;price&quot; : 10000,\n      &quot;stock&quot; : 10,\n      &quot;imageUrl&quot; : &quot;/goods/img/TV.jpg&quot;,\n      &quot;_links&quot; : {\n        &quot;self&quot; : {\n          &quot;href&quot; : &quot;http://labs-2091653521:8085/products/1&quot;\n        },\n        &quot;product&quot; : {\n          &quot;href&quot; : &quot;http://labs-2091653521:8085/products/1&quot;\n        },\n        &quot;productOptions&quot; : {\n          &quot;href&quot; : &quot;http://labs-2091653521:8085/products/1/productOptions&quot;\n        }\n      }\n    }, {\n      &quot;@id&quot; : 2,\n      &quot;name&quot; : &quot;MASK&quot;,\n      &quot;price&quot; : 20000,\n      &quot;stock&quot; : 20,\n      &quot;imageUrl&quot; : &quot;/goods/img/MASK.jpg&quot;,\n      &quot;_links&quot; : {\n        &quot;self&quot; : {\n          &quot;href&quot; : &quot;http://labs-2091653521:8085/products/2&quot;\n        },\n        &quot;product&quot; : {\n          &quot;href&quot; : &quot;http://labs-2091653521:8085/products/2&quot;\n        },\n        &quot;productOptions&quot; : {\n          &quot;href&quot; : &quot;http://labs-2091653521:8085/products/2/productOptions&quot;\n        }\n      }\n    },\n    ...</code></pre>\n<p>도커빌드:</p>\n<pre class=\"language-text\"><code class=\"language-text\">mvn package -B\ndocker build -t &lt;계정명&gt;/product:stable .</code></pre>\n<p>쿠버네티스 yaml 만들기</p>\n<pre class=\"language-text\"><code class=\"language-text\">apiVersion: &quot;apps/v1&quot;\nkind: &quot;Deployment&quot;\nmetadata: \n  name: &quot;products&quot;\n  labels: \n    app: &quot;products&quot;\n  namespace: &quot;shopping&quot;\nspec: \n  selector: \n    matchLabels: \n      app: &quot;products&quot;\n  replicas: 1\n  template: \n    metadata: \n      labels: \n        app: &quot;products&quot;\n    spec: \n      containers: \n        - \n          name: &quot;products&quot;\n          image: &quot;jinyoung/products:stable&quot;\n          ports: \n            - \n              containerPort: 8080</code></pre>\n<h4 id=\"api-게이트웨이\"><a href=\"#api-%EA%B2%8C%EC%9D%B4%ED%8A%B8%EC%9B%A8%EC%9D%B4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>API 게이트웨이</h4>\n<ul>\n<li>새 터미널을 열고</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">cd ~\ngit clone https://github.com/event-storming/gateway.git\ncd gateway/\nmvn spring-boot:run</code></pre>\n<ul>\n<li>메뉴 Labs > 포트 열기 > 8088 </li>\n<li>\n<p>게이트웨이 주소 확인</p>\n<ul>\n<li>e.g. <a href=\"http://8088-labs-2091653521.kuberman.io\" target=\"_blank\" rel=\"noopener noreferrer\">http://8088-labs-2091653521.kuberman.io</a></li>\n<li>인증서버가 아직 미구동이기 떄문에 HTTP ERROR 401 에러가 떠있음</li>\n</ul>\n</li>\n<li>\n<p>브라우저가 열린 주소 뒤에 /products 입력 (/products path 는 인증서버를 안타도록 구현됨)</p>\n<ul>\n<li>e.g. <a href=\"http://8088-labs-2091653521.kuberman.io/products\" target=\"_blank\" rel=\"noopener noreferrer\">http://8088-labs-2091653521.kuberman.io/products</a></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"프론트엔드와-api-게이트웨이-연결\"><a href=\"#%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%EC%99%80-api-%EA%B2%8C%EC%9D%B4%ED%8A%B8%EC%9B%A8%EC%9D%B4-%EC%97%B0%EA%B2%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>프론트엔드와 API 게이트웨이 연결</h4>\n<ul>\n<li>\n<p>프론트엔드 서버 내리기</p>\n<ul>\n<li>프론트엔드 서버를 실행했던 터미널에서 Ctrl + C</li>\n</ul>\n</li>\n<li>환경변수에 API 게이트웨이 정보를 설정</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">npm run build\ndocker build -t frontend .\ndocker run -d -p8080:8080 -e VUE_APP_API_HOST=&#39;&lt;얻어낸 API 게이트웨이 주소&gt;&#39; frontend </code></pre>\n<blockquote>\n<p>주의사항 : VUE_APP_API_HOST 주소 입력시 \"/\" (역슬레쉬) 가 들어가지 않도록 주의!!!!<br>\n역슬레쉬 가 들어갔을때 CORS 에러가 뜰수 있으니, 혹시 CORS 오류시 export 를 새로 하고 dokcer build 를 새로 해야함.<br>\n만약 새로 할 경우에는 docker ps 명령으로 현재 사용중인 도커 이미지 확인<br>\ndocker stop [CONTAINER ID]<br>\ndocker run -d -p8080:8080 -e VUE_APP_API_HOST='&#x3C;얻어낸 API 게이트웨이 주소>' frontend   </p>\n</blockquote>\n<p><img src=\"https://user-images.githubusercontent.com/487999/97806076-26b87c80-1c9d-11eb-9d49-cdbd44ab5c5a.png\" alt=\"image\"></p>\n<h4 id=\"주문-서비스\"><a href=\"#%EC%A3%BC%EB%AC%B8-%EC%84%9C%EB%B9%84%EC%8A%A4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>주문 서비스</h4>\n<ul>\n<li>새 터미널을 열고</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">cd ~\ngit clone https://github.com/event-storming/orders.git\ncd orders\nmvn spring-boot:run</code></pre>\n<h4 id=\"배송-서비스\"><a href=\"#%EB%B0%B0%EC%86%A1-%EC%84%9C%EB%B9%84%EC%8A%A4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>배송 서비스</h4>\n<ul>\n<li>새 터미널을 열고</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">cd ~\ngit clone https://github.com/event-storming/delivery.git\ncd delivery\nmvn spring-boot:run</code></pre>\n<h4 id=\"프론트엔드-브라우저에서-주문-하여-보기\"><a href=\"#%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C-%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80%EC%97%90%EC%84%9C-%EC%A3%BC%EB%AC%B8-%ED%95%98%EC%97%AC-%EB%B3%B4%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>프론트엔드 브라우저에서 주문 하여 보기</h4>\n<ul>\n<li>\n<p>프론트엔드에 접속하여 웹 브라우저 리프래시</p>\n<ul>\n<li>메뉴 Labs > 포트 열기 > 8080</li>\n</ul>\n</li>\n<li>\n<p>로그인 화면에서, 로그인 버튼 클릭</p>\n<blockquote>\n<p>로그인이 안됨. --> 인증서비스 필요!</p>\n</blockquote>\n</li>\n</ul>\n<h4 id=\"인증-서비스\"><a href=\"#%EC%9D%B8%EC%A6%9D-%EC%84%9C%EB%B9%84%EC%8A%A4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>인증 서비스</h4>\n<ul>\n<li>새 터미널을 열고</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">cd ~\ngit clone https://github.com/event-storming/oauth.git\ncd oauth\nmvn spring-boot:run</code></pre>\n<h4 id=\"다시-로그인-하여-주문시도\"><a href=\"#%EB%8B%A4%EC%8B%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%ED%95%98%EC%97%AC-%EC%A3%BC%EB%AC%B8%EC%8B%9C%EB%8F%84\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>다시 로그인 하여 주문시도</h4>\n<ul>\n<li>프론트엔드에서 로그인 버튼 클릭후</li>\n<li>상품조회 화면에서 TV 2대를 주문 해본다.</li>\n</ul>\n<h4 id=\"시스템간-연동의-확인\"><a href=\"#%EC%8B%9C%EC%8A%A4%ED%85%9C%EA%B0%84-%EC%97%B0%EB%8F%99%EC%9D%98-%ED%99%95%EC%9D%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>시스템간 연동의 확인</h4>\n<ul>\n<li>주문한 상품의 재고 수량이 변경됨을 확인:</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">http localhost:8085/products\n\n{\n  &quot;_embedded&quot; : {\n    &quot;products&quot; : [ {\n      &quot;@id&quot; : 1,\n      &quot;name&quot; : &quot;TV&quot;,\n      &quot;price&quot; : 10000,\n      &quot;stock&quot; : 8,\n      &quot;imageUrl&quot; : &quot;/goods/img/TV.jpg&quot;,\n      &quot;_links&quot; : {\n        ...\n      }\n    }, \n    ...</code></pre>\n<ul>\n<li>TV 의 stock 이 10개에서 8개로 줄어든 것을 확인할 수 있다.</li>\n<li>배송상태를 조회</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">http localhost:8082/deliveries</code></pre>\n<ul>\n<li>주문건들에 대한 배송 데이터가 출력됨을 확인</li>\n</ul>\n<h4 id=\"배송-서비스-장애-상황과-장애-격리-확인\"><a href=\"#%EB%B0%B0%EC%86%A1-%EC%84%9C%EB%B9%84%EC%8A%A4-%EC%9E%A5%EC%95%A0-%EC%83%81%ED%99%A9%EA%B3%BC-%EC%9E%A5%EC%95%A0-%EA%B2%A9%EB%A6%AC-%ED%99%95%EC%9D%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>배송 서비스 장애 상황과 장애 격리 확인</h4>\n<ul>\n<li>배송서비스 터미널에서 Ctrl + C 하여 배송서비스를 멈춤</li>\n<li>주문화면에서 마스크를 5개 구매</li>\n<li>주문상태 페이지에서 배송내역 확인 - 배송상태 표시 안됨</li>\n</ul>\n<blockquote>\n<p>배송이 안되더라도 주문은 문제가 없음을 확인하는 것이 포인트!</p>\n</blockquote>\n<h4 id=\"배송-서비스-복구시-최종-일관성-eventual-consistency에-의해-데이터가-일치됨을-확인\"><a href=\"#%EB%B0%B0%EC%86%A1-%EC%84%9C%EB%B9%84%EC%8A%A4-%EB%B3%B5%EA%B5%AC%EC%8B%9C-%EC%B5%9C%EC%A2%85-%EC%9D%BC%EA%B4%80%EC%84%B1-eventual-consistency%EC%97%90-%EC%9D%98%ED%95%B4-%EB%8D%B0%EC%9D%B4%ED%84%B0%EA%B0%80-%EC%9D%BC%EC%B9%98%EB%90%A8%EC%9D%84-%ED%99%95%EC%9D%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>배송 서비스 복구시 최종 일관성 (Eventual Consistency)에 의해 데이터가 일치됨을 확인</h4>\n<ul>\n<li>배송 서비스를 다시 기동</li>\n<li>배송상태를 조회</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">http localhost:8082/deliveries</code></pre>\n<ul>\n<li>주문건들에 대한 누적된 배송 데이터가 출력됨을 확인</li>\n</ul>\n<h3 id=\"운영단계-무작정-따라하기\"><a href=\"#%EC%9A%B4%EC%98%81%EB%8B%A8%EA%B3%84-%EB%AC%B4%EC%9E%91%EC%A0%95-%EB%94%B0%EB%9D%BC%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>운영단계 무작정 따라하기</h3>\n<h4 id=\"개발기-프로세스-모두-종료하기\"><a href=\"#%EA%B0%9C%EB%B0%9C%EA%B8%B0-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%EB%AA%A8%EB%91%90-%EC%A2%85%EB%A3%8C%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>개발기 프로세스 모두 종료하기</h4>\n<ul>\n<li>\n<p>모든 터미널 정삭적으로 닫기</p>\n<ul>\n<li>모든 터미널에 접속한 후, Ctrl+C 입력</li>\n<li>정상종료 후 다시 명령 프롬프트 상태가 되면 터미널 창을 닫기</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"상품서비스와-api-gateway-를-쿠버네티스에-배포하기\"><a href=\"#%EC%83%81%ED%92%88%EC%84%9C%EB%B9%84%EC%8A%A4%EC%99%80-api-gateway-%EB%A5%BC-%EC%BF%A0%EB%B2%84%EB%84%A4%ED%8B%B0%EC%8A%A4%EC%97%90-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>상품서비스와 API Gateway 를 쿠버네티스에 배포하기</h4>\n<ul>\n<li>새로운 터미널 열기, 다음을 입력:</li>\n</ul>\n<pre class=\"language-shell\"><code class=\"language-shell\">kubectl run products --image<span class=\"token operator\">=</span>jinyoung/12mall-product:latest\nkubectl expose deploy products --port<span class=\"token operator\">=</span><span class=\"token number\">8080</span>\n\nkubectl run gateway --image<span class=\"token operator\">=</span>jinyoung/12mall-gateway\nkubectl expose deploy gateway --port<span class=\"token operator\">=</span><span class=\"token number\">8080</span> --type<span class=\"token operator\">=</span>LoadBalancer</code></pre>\n<h4 id=\"게이트웨이를-프론트엔드와-연결하기위해-게이트웨이의-주소를-복사\"><a href=\"#%EA%B2%8C%EC%9D%B4%ED%8A%B8%EC%9B%A8%EC%9D%B4%EB%A5%BC-%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%EC%99%80-%EC%97%B0%EA%B2%B0%ED%95%98%EA%B8%B0%EC%9C%84%ED%95%B4-%EA%B2%8C%EC%9D%B4%ED%8A%B8%EC%9B%A8%EC%9D%B4%EC%9D%98-%EC%A3%BC%EC%86%8C%EB%A5%BC-%EB%B3%B5%EC%82%AC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>게이트웨이를 프론트엔드와 연결하기위해 게이트웨이의 주소를 복사:</h4>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl get svc -w</code></pre>\n<ul>\n<li>얻어낸 EXTERNAL IP 를 복사, 브라우저에서 접속해보았을때 상품정보 json 이 출력되는지 확인:\ne.g. <a href=\"http://35.243.124.94:8080/products\" target=\"_blank\" rel=\"noopener noreferrer\">http://35.243.124.94:8080/products</a></li>\n</ul>\n","sidebar":"business","next":"","prev":"","headings":[{"depth":1,"value":"12번가 전체 마이크로서비스의 배포","anchor":"#12번가-전체-마이크로서비스의-배포"},{"depth":3,"value":"개발기에서 전체 시스템 무작정 따라하기","anchor":"#개발기에서-전체-시스템-무작정-따라하기"},{"depth":4,"value":"프론트엔드","anchor":"#프론트엔드"},{"depth":4,"value":"상품 서비스","anchor":"#상품-서비스"},{"depth":4,"value":"API 게이트웨이","anchor":"#api-게이트웨이"},{"depth":4,"value":"프론트엔드와 API 게이트웨이 연결","anchor":"#프론트엔드와-api-게이트웨이-연결"},{"depth":4,"value":"주문 서비스","anchor":"#주문-서비스"},{"depth":4,"value":"배송 서비스","anchor":"#배송-서비스"},{"depth":4,"value":"프론트엔드 브라우저에서 주문 하여 보기","anchor":"#프론트엔드-브라우저에서-주문-하여-보기"},{"depth":4,"value":"인증 서비스","anchor":"#인증-서비스"},{"depth":4,"value":"다시 로그인 하여 주문시도","anchor":"#다시-로그인-하여-주문시도"},{"depth":4,"value":"시스템간 연동의 확인","anchor":"#시스템간-연동의-확인"},{"depth":4,"value":"배송 서비스 장애 상황과 장애 격리 확인","anchor":"#배송-서비스-장애-상황과-장애-격리-확인"},{"depth":4,"value":"배송 서비스 복구시 최종 일관성 (Eventual Consistency)에 의해 데이터가 일치됨을 확인","anchor":"#배송-서비스-복구시-최종-일관성-eventual-consistency에-의해-데이터가-일치됨을-확인"},{"depth":3,"value":"운영단계 무작정 따라하기","anchor":"#운영단계-무작정-따라하기"},{"depth":4,"value":"개발기 프로세스 모두 종료하기","anchor":"#개발기-프로세스-모두-종료하기"},{"depth":4,"value":"상품서비스와 API Gateway 를 쿠버네티스에 배포하기","anchor":"#상품서비스와-api-gateway-를-쿠버네티스에-배포하기"},{"depth":4,"value":"게이트웨이를 프론트엔드와 연결하기위해 게이트웨이의 주소를 복사:","anchor":"#게이트웨이를-프론트엔드와-연결하기위해-게이트웨이의-주소를-복사"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/operations/ops-service-mesh-istio/","title":"[Service Mesh] Istio"}},{"node":{"path":"/operations/ops-utility/","title":"쿠버네티스 유틸리티"}},{"node":{"path":"/operations/ops-readiness/","title":"무정지 배포 실습"}},{"node":{"path":"/operations/ops-ingress-virtualhost/","title":"Ingress - Virtual Host based"}},{"node":{"path":"/operations/ops-persistence-volume/","title":"파일시스템 (볼륨) 연결과 데이터베이스 설정"}},{"node":{"path":"/operations/ops-liveness/","title":"셀프힐링 실습"}},{"node":{"path":"/operations/ops-ingress/","title":"Ingress 를 통한 진입점 통일 - Path-based routing"}},{"node":{"path":"/operations/ops-kubernetes/","title":"Kubernetes Basic Commands"}},{"node":{"path":"/operations/ops-deploy-my-app/","title":"애플리케이션 패키징,도커라이징,클러스터 배포"}},{"node":{"path":"/operations/ops-aws-setting/","title":"AWS Cloud Setup(EKS, ECR 설정)"}},{"node":{"path":"/operations/ops-autoscale/","title":"Pod Auto Scaling"}},{"node":{"path":"/operations/ops-argo-rollout-canary-istio/","title":"[GitOps] Argo Rollout 와 Istio 를 통한 카나리 배포"}},{"node":{"path":"/operations/k8s-monitoring/","title":"MSA 모니터링 with installing Grafana"}},{"node":{"path":"/operations/msa-logging/","title":"MSA 로깅 with EFK Stack"}},{"node":{"path":"/operations/ops-anatomy-kubernetes/","title":"쿠버네티스 내부구조 분석"}},{"node":{"path":"/operations/istio-resiliency-part2/","title":"[Service Mesh] Istio 를 통한 서비스 회복성 Part2 - 서킷브레이커"}},{"node":{"path":"/operations/istio-msa-telemetry/","title":"[Service Mesh] MSA 모니터링 w/ Istio addon Grafana"}},{"node":{"path":"/operations/istio-traffic/","title":"[Service Mesh] Istio 를 통한 동적 트래픽 라우팅"}},{"node":{"path":"/operations/istio-resiliency-part1/","title":"[Service Mesh] Istio 를 통한 서비스 회복성 Part1 - 타임아웃/재시도"}},{"node":{"path":"/operations/gitops-argo-cd/","title":"[GitOps] Argo CD 를 통한 카나리 배포"}},{"node":{"path":"/operations/azure/","title":"Azure Cloud Setup (AKS, ACR 설정)"}},{"node":{"path":"/development/oauth2withkeycloak/","title":"JWT토큰 기반 인증인가 w/ Keycloak Authz-svr"}},{"node":{"path":"/operations/end-to-end/","title":"12번가 전체 마이크로서비스의 배포"}},{"node":{"path":"/development/ops-docker/","title":"[빌드] Docker Image Build & Push"}},{"node":{"path":"/development/oauth2/","title":"JWT토큰 기반 인증인가 w/ Spring Authz-svr"}},{"node":{"path":"/development/monolith2misvc/","title":"[구현] Req/Res 방식의 MSA 연동"}},{"node":{"path":"/development/keycloak-oauth2-2/","title":"Keycloak OIDC w/ OAuth2 Client"}},{"node":{"path":"/development/kafka-scaling/","title":"Kafka 스케일링"}},{"node":{"path":"/development/keycloak-oauth2-3/","title":"Fine grained RBAC w/ Resource Server"}},{"node":{"path":"/development/keycloak-oauth2-1/","title":"Keycloak Authorization 서버 설정"}},{"node":{"path":"/development/gateway/","title":"[구현] 게이트웨이를 통한 진입점 통일"}},{"node":{"path":"/development/kafka-base/","title":"[pre-lab] 카프카 연습"}},{"node":{"path":"/development/kafka-retry-dlq/","title":"Retry & Dead Letter Queue"}},{"node":{"path":"/development/kafka-manual-commit/","title":"Kafka 수동커밋"}},{"node":{"path":"/development/front-end/","title":"프론트엔드 개발"}},{"node":{"path":"/development/dp-cqrs/","title":"[구현] 데이터프로젝션-CQRS"}},{"node":{"path":"/development/dp-graphql/","title":"[구현] 데이터프로젝션-GraphQL"}},{"node":{"path":"/development/dp-composite-svc/","title":"[구현] 데이터프로젝션-컴포지트서비스"}},{"node":{"path":"/development/cqrs-modeling/","title":"[pre-lab] CQRS 샘플 모델링"}},{"node":{"path":"/development/cna-pubsub2/","title":"[구현] Pub/Sub - Compensation and Correlation"}},{"node":{"path":"/development/contract-test/","title":"[테스트] Consumer Driven Test 기반 Contract Test"}},{"node":{"path":"/development/cna-start/","title":"[구현] 마이크로서비스의 실행"}},{"node":{"path":"/development/capstone-project-2/","title":"[Capstone Prj.] Simple Mall - Implementation"}},{"node":{"path":"/development/cna-pubsub/","title":"[구현] Pub/Sub 방식의 MSA 연동"}},{"node":{"path":"/development/circuitbreaker/","title":"[구현] Req/Res 방식에서 장애전파 차단(서킷브레이커 패턴)"}},{"node":{"path":"/business/ddd-google-drive/","title":"[이벤트스토밍] DDD 구글 드라이브 예제"}},{"node":{"path":"/development/advanced-connect/","title":"Kafka Connect"}},{"node":{"path":"/business/zero-based-cna/","title":"[설계] ES모델 기반 Inner 아키텍처 이해"}},{"node":{"path":"/development/capstone-project-1/","title":"[Capstone Prj.] Simple Mall - Scenario/Modeling"}},{"node":{"path":"/business/collaborative-eventstorming/","title":"[이벤트스토밍] Collaborative Eventstorming"}},{"node":{"path":"/business/","title":"[분석] DDD 이벤트의 도출 - 12번가 쇼핑몰"}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"[이벤트스토밍] DDD Food Delivery 예제"}},{"node":{"path":"/business/design-to-code/","title":"[설계] ES모델기반 템플릿 코드 분석"}}]}},"context":{}}