{"hash":"82edfc9c503203a4b89aaf7ee02c1b0930a87be2","data":{"markdownPage":{"id":"929b149d0ac0435772a5ce0c7a2b761a","title":"[Service Mesh] MSA 모니터링 w/ Istio addon Grafana","description":"","path":"/operations/istio-msa-telemetry/","timeToRead":3,"content":"<h1 id=\"service-mesh-msa-모니터링-w-istio-addon-grafana\"><a href=\"#service-mesh-msa-%EB%AA%A8%EB%8B%88%ED%84%B0%EB%A7%81-w-istio-addon-grafana\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>[Service Mesh] MSA 모니터링 w/ Istio addon Grafana</h1>\n<h3 id=\"service-mesh-istio-모니터링\"><a href=\"#service-mesh-istio-%EB%AA%A8%EB%8B%88%ED%84%B0%EB%A7%81\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Service Mesh Istio 모니터링</h3>\n<h4 id=\"istio-addon-설치\"><a href=\"#istio-addon-%EC%84%A4%EC%B9%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Istio Addon 설치</h4>\n<pre class=\"language-text\"><code class=\"language-text\">cd istio-&lt;istio-version&gt;\nkubectl apply -f samples/addons</code></pre>\n<h4 id=\"ingress-로-모니터링-도구들-expose\"><a href=\"#ingress-%EB%A1%9C-%EB%AA%A8%EB%8B%88%ED%84%B0%EB%A7%81-%EB%8F%84%EA%B5%AC%EB%93%A4-expose\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Ingress 로 모니터링 도구들 expose</h4>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl apply -f - &lt;&lt;EOF\napiVersion: &quot;extensions/v1beta1&quot;\nkind: &quot;Ingress&quot;\nmetadata: \n  name: &quot;istio-ingress&quot;\n  namespace: &quot;istio-system&quot;\n  annotations: \n    kubernetes.io/ingress.class: &quot;nginx&quot;\nspec: \n  rules: \n    - host: &quot;tracing.service.com&quot;\n      http: \n        paths: \n          - \n            path: /\n            pathType: Prefix\n            backend: \n              serviceName: tracing\n              servicePort: 80\t\n    - host: &quot;kiali.service.com&quot;\n      http: \n        paths: \n          - \n            path: /\n            pathType: Prefix\n            backend: \n              serviceName: kiali\n              servicePort: 20001\n\n    - host: &quot;prom.service.com&quot;\n      http: \n        paths: \n          - \n            path: /\n            pathType: Prefix\n            backend: \n              serviceName: prometheus\n              servicePort: 9090\n\n    - host: &quot;gra.service.com&quot;\n      http: \n        paths: \n          - \n            path: /\n            pathType: Prefix\n            backend: \n              serviceName: grafana\n              servicePort: 3000\nEOF</code></pre>\n<blockquote>\n<p>ingress provider 가 없는경우</p>\n<pre class=\"language-text\"><code class=\"language-text\">helm repo add stable https://charts.helm.sh/stable\nhelm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx\nhelm repo update\nkubectl create namespace ingress-basic</code></pre>\n</blockquote>\n<p>helm install nginx-ingress ingress-nginx/ingress-nginx --namespace=ingress-basic</p>\n<pre class=\"language-text\"><code class=\"language-text\">서비스 접근을 위하여 hosts 파일을 변경:\nC:\\Windows\\System32\\drivers\\etc 내의 hosts 파일에 아래를 추가한다: (mac 과 linux 인 경우 /etc/hosts)</code></pre>\n<p>&#x3C;획득한 ingress의 External IP>  tracing.service.com, kiali.service.com, prom.service.com, gra.service.com</p>\n<pre class=\"language-text\"><code class=\"language-text\">&gt; ingress address 얻기: kubectl get ingress -n istio-system 한다음 &quot;ADDRESS&quot; 부분 확인\n&gt; ADDRESS 에 값이 없다면, 위의 &quot;ingress provider 가 없는경우&quot; 확인\n\n#### 각 Monitoring Tool 접속 방법\n브라우저에서 다음의 url 들로 접속:\n- tracing.service.com\n- kiali.service.com/kiali\n- prom.service.com\n- gra.service.com\n\n\n#### Grafana Monitoring 사용법 \n\n&lt;img width=&quot;420&quot; alt=&quot;스크린샷 2022-02-23 오후 2 31 53&quot; src=&quot;https://user-images.githubusercontent.com/43136526/155266431-7aee06a7-f5b1-41dc-86af-641763d751f8.png&quot;&gt;\n\n- 좌측 메뉴바에서 돋보기의 Search 클릭 \n\n&lt;img width=&quot;1319&quot; alt=&quot;스크린샷 2022-02-23 오후 2 33 20&quot; src=&quot;https://user-images.githubusercontent.com/43136526/155266537-03f88c5d-88f2-4f66-885b-3e9951150d2a.png&quot;&gt;\n\n- Istio의 Istio Service Dashboard 클릭 \n\n\n#### Grafana Dashboard plugin 설치 \n\n##### Dashboard plugin 검색 \n\nhttps://grafana.com/grafana/dashboards/ \n\n- 위 링크로 이동\n- Search Dashboard에서 istio 검색 \n- 검색 결과 중 Istio Service Dashboard 클릭\n- 우측의 Copy ID to Clipboard 클릭 \n\n##### Grafana에 plugin 추가 \n\n&lt;img width=&quot;274&quot; alt=&quot;스크린샷 2022-02-23 오후 3 13 42&quot; src=&quot;https://user-images.githubusercontent.com/43136526/155269822-082f28e1-81e0-4394-8a8a-8681ee2e75fb.png&quot;&gt;\n\n- 좌측 메뉴바에서 + 클릭 후 import 클릭 \n\n&lt;img width=&quot;655&quot; alt=&quot;스크린샷 2022-02-23 오후 3 30 32&quot; src=&quot;https://user-images.githubusercontent.com/43136526/155271211-34a1124d-6686-4a5f-811e-01b9008a051a.png&quot;&gt;\n\n- import via grafana.com 에 grafana 에서 복사한 plugin id 붙여넣기 \n\n&lt;img width=&quot;622&quot; alt=&quot;스크린샷 2022-02-23 오후 3 31 53&quot; src=&quot;https://user-images.githubusercontent.com/43136526/155271318-2f8bf3b1-de2c-49a1-b6a1-9a99481bfd33.png&quot;&gt;\n\n#### Kubernetes Monitoring\n- uid 를 315번으로 입력 후 Load 클릭 \n- 하단 prometheus 에서 prometheus 선택\n- 선택 후 import 클릭\n\n\n#### Microservice Monitoring\n- uid 를 7636번으로 입력 후 Load 클릭 \n- 하단 prometheus 에서 prometheus 선택\n- 선택 후 import 클릭</code></pre>\n","sidebar":"business","next":"","prev":"","headings":[{"depth":1,"value":" MSA 모니터링 w/ Istio addon Grafana","anchor":"#service-mesh-msa-모니터링-w-istio-addon-grafana"},{"depth":3,"value":"Service Mesh Istio 모니터링","anchor":"#service-mesh-istio-모니터링"},{"depth":4,"value":"Istio Addon 설치","anchor":"#istio-addon-설치"},{"depth":4,"value":"Ingress 로 모니터링 도구들 expose","anchor":"#ingress-로-모니터링-도구들-expose"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/operations/ops-service-mesh-istio/","title":"[Service Mesh] Istio"}},{"node":{"path":"/operations/ops-utility/","title":"쿠버네티스 유틸리티"}},{"node":{"path":"/operations/ops-readiness/","title":"무정지 배포 실습"}},{"node":{"path":"/operations/ops-ingress-virtualhost/","title":"Ingress - Virtual Host based"}},{"node":{"path":"/operations/ops-persistence-volume/","title":"파일시스템 (볼륨) 연결과 데이터베이스 설정"}},{"node":{"path":"/operations/ops-liveness/","title":"셀프힐링 실습"}},{"node":{"path":"/operations/ops-ingress/","title":"Ingress 를 통한 진입점 통일 - Path-based routing"}},{"node":{"path":"/operations/ops-kubernetes/","title":"Kubernetes Basic Commands"}},{"node":{"path":"/operations/ops-deploy-my-app/","title":"애플리케이션 패키징,도커라이징,클러스터 배포"}},{"node":{"path":"/operations/ops-aws-setting/","title":"AWS Cloud Setup(EKS, ECR 설정)"}},{"node":{"path":"/operations/ops-autoscale/","title":"Pod Auto Scaling"}},{"node":{"path":"/operations/ops-argo-rollout-canary-istio/","title":"[GitOps] Argo Rollout 와 Istio 를 통한 카나리 배포"}},{"node":{"path":"/operations/k8s-monitoring/","title":"MSA 모니터링 with installing Grafana"}},{"node":{"path":"/operations/msa-logging/","title":"MSA 로깅 with EFK Stack"}},{"node":{"path":"/operations/ops-anatomy-kubernetes/","title":"쿠버네티스 내부구조 분석"}},{"node":{"path":"/operations/istio-resiliency-part2/","title":"[Service Mesh] Istio 를 통한 서비스 회복성 Part2 - 서킷브레이커"}},{"node":{"path":"/operations/istio-msa-telemetry/","title":"[Service Mesh] MSA 모니터링 w/ Istio addon Grafana"}},{"node":{"path":"/operations/istio-traffic/","title":"[Service Mesh] Istio 를 통한 동적 트래픽 라우팅"}},{"node":{"path":"/operations/istio-resiliency-part1/","title":"[Service Mesh] Istio 를 통한 서비스 회복성 Part1 - 타임아웃/재시도"}},{"node":{"path":"/operations/gitops-argo-cd/","title":"[GitOps] Argo CD 를 통한 카나리 배포"}},{"node":{"path":"/operations/azure/","title":"Azure Cloud Setup (AKS, ACR 설정)"}},{"node":{"path":"/development/oauth2withkeycloak/","title":"JWT토큰 기반 인증인가 w/ Keycloak Authz-svr"}},{"node":{"path":"/operations/end-to-end/","title":"12번가 전체 마이크로서비스의 배포"}},{"node":{"path":"/development/ops-docker/","title":"[빌드] Docker Image Build & Push"}},{"node":{"path":"/development/oauth2/","title":"JWT토큰 기반 인증인가 w/ Spring Authz-svr"}},{"node":{"path":"/development/monolith2misvc/","title":"[구현] Req/Res 방식의 MSA 연동"}},{"node":{"path":"/development/keycloak-oauth2-2/","title":"Keycloak OIDC w/ OAuth2 Client"}},{"node":{"path":"/development/kafka-scaling/","title":"Kafka 스케일링"}},{"node":{"path":"/development/keycloak-oauth2-3/","title":"Fine grained RBAC w/ Resource Server"}},{"node":{"path":"/development/keycloak-oauth2-1/","title":"Keycloak Authorization 서버 설정"}},{"node":{"path":"/development/gateway/","title":"[구현] 게이트웨이를 통한 진입점 통일"}},{"node":{"path":"/development/kafka-base/","title":"[pre-lab] 카프카 연습"}},{"node":{"path":"/development/kafka-retry-dlq/","title":"Retry & Dead Letter Queue"}},{"node":{"path":"/development/kafka-manual-commit/","title":"Kafka 수동커밋"}},{"node":{"path":"/development/front-end/","title":"프론트엔드 개발"}},{"node":{"path":"/development/dp-cqrs/","title":"[구현] 데이터프로젝션-CQRS"}},{"node":{"path":"/development/dp-graphql/","title":"[구현] 데이터프로젝션-GraphQL"}},{"node":{"path":"/development/dp-composite-svc/","title":"[구현] 데이터프로젝션-컴포지트서비스"}},{"node":{"path":"/development/cqrs-modeling/","title":"[pre-lab] CQRS 샘플 모델링"}},{"node":{"path":"/development/cna-pubsub2/","title":"[구현] Pub/Sub - Compensation and Correlation"}},{"node":{"path":"/development/contract-test/","title":"[테스트] Consumer Driven Test 기반 Contract Test"}},{"node":{"path":"/development/cna-start/","title":"[구현] 마이크로서비스의 실행"}},{"node":{"path":"/development/capstone-project-2/","title":"[Capstone Prj.] Simple Mall - Implementation"}},{"node":{"path":"/development/cna-pubsub/","title":"[구현] Pub/Sub 방식의 MSA 연동"}},{"node":{"path":"/development/circuitbreaker/","title":"[구현] Req/Res 방식에서 장애전파 차단(서킷브레이커 패턴)"}},{"node":{"path":"/business/ddd-google-drive/","title":"[이벤트스토밍] DDD 구글 드라이브 예제"}},{"node":{"path":"/development/advanced-connect/","title":"Kafka Connect"}},{"node":{"path":"/business/zero-based-cna/","title":"[설계] ES모델 기반 Inner 아키텍처 이해"}},{"node":{"path":"/development/capstone-project-1/","title":"[Capstone Prj.] Simple Mall - Scenario/Modeling"}},{"node":{"path":"/business/collaborative-eventstorming/","title":"[이벤트스토밍] Collaborative Eventstorming"}},{"node":{"path":"/business/","title":"[분석] DDD 이벤트의 도출 - 12번가 쇼핑몰"}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"[이벤트스토밍] DDD Food Delivery 예제"}},{"node":{"path":"/business/design-to-code/","title":"[설계] ES모델기반 템플릿 코드 분석"}}]}},"context":{}}