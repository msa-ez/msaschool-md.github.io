{"hash":"49f02bf9a1ddbf017efeb189302ebd145a2955d8","data":{"markdownPage":{"id":"fbd4f1a9b718ff247906424224ba4076","title":"Pod 상태값에 따른 마이크로서비스 트러블 슈팅","description":"","path":"/operations/ops-pod-status/","timeToRead":2,"content":"<h1 id=\"pod-상태값에-따른-마이크로서비스-트러블-슈팅\"><a href=\"#pod-%EC%83%81%ED%83%9C%EA%B0%92%EC%97%90-%EB%94%B0%EB%A5%B8-%EB%A7%88%EC%9D%B4%ED%81%AC%EB%A1%9C%EC%84%9C%EB%B9%84%EC%8A%A4-%ED%8A%B8%EB%9F%AC%EB%B8%94-%EC%8A%88%ED%8C%85\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Pod 상태값에 따른 마이크로서비스 트러블 슈팅</h1>\n<h1 id=\"pod-상태값에-따른-마이크로서비스-트러블-슈팅-1\"><a href=\"#pod-%EC%83%81%ED%83%9C%EA%B0%92%EC%97%90-%EB%94%B0%EB%A5%B8-%EB%A7%88%EC%9D%B4%ED%81%AC%EB%A1%9C%EC%84%9C%EB%B9%84%EC%8A%A4-%ED%8A%B8%EB%9F%AC%EB%B8%94-%EC%8A%88%ED%8C%85-1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Pod 상태값에 따른 마이크로서비스 트러블 슈팅</h1>\n<h2 id=\"pod-status--trouble-shooting\"><a href=\"#pod-status--trouble-shooting\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Pod Status &#x26; Trouble Shooting</h2>\n<h4 id=\"객체-생성\"><a href=\"#%EA%B0%9D%EC%B2%B4-%EC%83%9D%EC%84%B1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>객체 생성</h4>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl create deployment nginx --image=nginx</code></pre>\n<h4 id=\"객체-정보-열람하기\"><a href=\"#%EA%B0%9D%EC%B2%B4-%EC%A0%95%EB%B3%B4-%EC%97%B4%EB%9E%8C%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>객체 정보 열람하기</h4>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl get deploy -o wide\nkubectl get pod -o wide</code></pre>\n<h4 id=\"객체-상세-정보-확인하기\"><a href=\"#%EA%B0%9D%EC%B2%B4-%EC%83%81%EC%84%B8-%EC%A0%95%EB%B3%B4-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>객체 상세 정보 확인하기</h4>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl describe [pod/객체 이름]\nkubectl describe [deploy/nginx]</code></pre>\n<h3 id=\"pod-status에-따른-trouble-shooting\"><a href=\"#pod-status%EC%97%90-%EB%94%B0%EB%A5%B8-trouble-shooting\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Pod Status에 따른 Trouble Shooting</h3>\n<h3 id=\"1-imagepullbackoff-errimagepull-status-일때\"><a href=\"#1-imagepullbackoff-errimagepull-status-%EC%9D%BC%EB%95%8C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. ImagePullBackOff/ ErrImagePull Status 일때,</h3>\n<ul>\n<li>원인 : 이미지 저장소에 이미지 부재, 오타(Typo) , 혹은 권한 문제로 이미지 호출이 불가한 경우</li>\n<li>해결책 : 이미지 풀 네임 및 저장소 존재 유무 확인, 권한 문제 해결 </li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\"># Deploy with a non-existent image name\nkubectl create deployment nginx --image=nginx:1q2w3e4r01010101\nkubectl get pod\n# Trouble shooting\nkubectl describe [pod/객체 이름]</code></pre>\n<h3 id=\"2-crashloopbackoff-errors-status-일때\"><a href=\"#2-crashloopbackoff-errors-status-%EC%9D%BC%EB%95%8C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. CrashLoopBackOff/ Errors Status 일때,</h3>\n<ul>\n<li>원인 : 이미지는 존재하나, 런타임에서 컨테이너 생성 시 오류</li>\n<li>해결책 : 컨테이너 출력 스트림을 조회하여 (DevOps 개발자가) 오류 해결 </li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\"># Deploying images with errors\nkubectl create deployment order --image=apexacme/order:latest\nkubectl get pod\n# Trouble shooting\nkubectl logs [pod/객체 이름]\nkubectl logs -f [pod/객체 이름]</code></pre>\n<h3 id=\"3-running-status이지만-서비스-확인이-안될때\"><a href=\"#3-running-status%EC%9D%B4%EC%A7%80%EB%A7%8C-%EC%84%9C%EB%B9%84%EC%8A%A4-%ED%99%95%EC%9D%B8%EC%9D%B4-%EC%95%88%EB%90%A0%EB%95%8C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3. Running Status이지만 서비스 확인이 안될때,</h3>\n<ul>\n<li>원인 : 컨테이너는 정상적으로 생성되었으나, 잘못된 Port 매핑 오류 등</li>\n<li>해결책 : 컨테이너 내부에 직접 접속하여 의심가는 체크포인트에 필요한 툴을 설치하여 해결 </li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\"># Assume that deployed Nginx is not queried\nkubectl get pod\nkubectl exec -it [pod/객체 이름] -- /bin/bash\nls\ndf -k\ncurl localhost:80\nexit</code></pre>\n<h3 id=\"4-pending-status가-지속될-경우\"><a href=\"#4-pending-status%EA%B0%80-%EC%A7%80%EC%86%8D%EB%90%A0-%EA%B2%BD%EC%9A%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>4. Pending Status가 지속될 경우,</h3>\n<ul>\n<li>원인 : worker node 갯수가 부족한 경우, Pod 의 status 가 pending 에서 변하지 않음</li>\n<li>해결책 : 워크 노드 풀을 확장하거나, 혹은 쓰지 않는 객체를 삭제하여 리소스를 확보</li>\n</ul>\n<h3 id=\"5-evicted-status가-지속될-경우\"><a href=\"#5-evicted-status%EA%B0%80-%EC%A7%80%EC%86%8D%EB%90%A0-%EA%B2%BD%EC%9A%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>5. Evicted Status가 지속될 경우,</h3>\n<ul>\n<li>원인 : 이미 스케쥴링 된 pod가  실행 중 노드 메모리나 CPU 가 부족해  쫓겨난 경우</li>\n<li>또는 Pod 자체의 사이즈가 커서 어느 node 도 받아들일 수 없는 경우</li>\n<li>해결책 : 배포 시 리소스 Spec.을 명시하거나, 노드 스케일 업(Scale Up) 필요</li>\n</ul>\n","sidebar":"business","next":"","prev":"","headings":[{"depth":1,"value":"Pod 상태값에 따른 마이크로서비스 트러블 슈팅","anchor":"#pod-상태값에-따른-마이크로서비스-트러블-슈팅"},{"depth":1,"value":"Pod 상태값에 따른 마이크로서비스 트러블 슈팅","anchor":"#pod-상태값에-따른-마이크로서비스-트러블-슈팅-1"},{"depth":2,"value":"Pod Status & Trouble Shooting","anchor":"#pod-status--trouble-shooting"},{"depth":4,"value":"객체 생성","anchor":"#객체-생성"},{"depth":4,"value":"객체 정보 열람하기","anchor":"#객체-정보-열람하기"},{"depth":4,"value":"객체 상세 정보 확인하기","anchor":"#객체-상세-정보-확인하기"},{"depth":3,"value":"Pod Status에 따른 Trouble Shooting","anchor":"#pod-status에-따른-trouble-shooting"},{"depth":3,"value":"1. ImagePullBackOff/ ErrImagePull Status 일때,","anchor":"#1-imagepullbackoff-errimagepull-status-일때"},{"depth":3,"value":"2. CrashLoopBackOff/ Errors Status 일때,","anchor":"#2-crashloopbackoff-errors-status-일때"},{"depth":3,"value":"3. Running Status이지만 서비스 확인이 안될때,","anchor":"#3-running-status이지만-서비스-확인이-안될때"},{"depth":3,"value":"4. Pending Status가 지속될 경우,","anchor":"#4-pending-status가-지속될-경우"},{"depth":3,"value":"5. Evicted Status가 지속될 경우,","anchor":"#5-evicted-status가-지속될-경우"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/operations/service/","title":"12번가 마이크로서비스 라우터(Service) 생성"}},{"node":{"path":"/operations/ops-service-mesh-istio/","title":"[Service Mesh] Istio"}},{"node":{"path":"/operations/ops-utility/","title":"쿠버네티스 유틸리티"}},{"node":{"path":"/operations/ops-persistence-volume/","title":"파일시스템 (볼륨) 연결과 데이터베이스 설정"}},{"node":{"path":"/operations/ops-readiness/","title":"셀프힐링 & 무정지 배포 실습"}},{"node":{"path":"/operations/ops-kubernetes/","title":"Kubernetes Basic Command"}},{"node":{"path":"/operations/ops-service-mesh-istio-2/","title":"[Service Mesh] Istio-2"}},{"node":{"path":"/operations/ops-pod-status/","title":"Pod 상태값에 따른 마이크로서비스 트러블 슈팅"}},{"node":{"path":"/operations/ops-persistence-volume-efs/","title":"파일공유를 위한 NAS 스토리지 생성과 설정"}},{"node":{"path":"/operations/ops-liveness/","title":"셀프힐링 실습"}},{"node":{"path":"/operations/ops-ingress/","title":"Ingress 를 통한 진입점 통일 - Path-based routing"}},{"node":{"path":"/operations/ops-aws-setting/","title":"AWS Cloud Setup(EKS, ECR 설정)"}},{"node":{"path":"/operations/ops-ingress-virtualhost/","title":"Ingress - Virtual Host based"}},{"node":{"path":"/operations/ops-deploy-my-app/","title":"애플리케이션 패키징,도커라이징,클러스터 배포"}},{"node":{"path":"/operations/ops-autoscale/","title":"Pod Auto Scaling"}},{"node":{"path":"/operations/istio-resiliency-part2/","title":"[Service Mesh] Istio 를 통한 서비스 회복성 Part2 - 서킷브레이커"}},{"node":{"path":"/operations/istio-resiliency-part1/","title":"[Service Mesh] Istio 를 통한 서비스 회복성 Part1 - 타임아웃/재시도"}},{"node":{"path":"/operations/ops-argo-rollout-canary-istio/","title":"[GitOps] Argo Rollout 와 Istio 를 통한 카나리 배포"}},{"node":{"path":"/operations/k8s-monitoring/","title":"MSA 모니터링 with installing Grafana"}},{"node":{"path":"/operations/microservice-logging/","title":"마이크로서비스 통합 로깅 with EFK stack"}},{"node":{"path":"/operations/ops-anatomy-kubernetes/","title":"쿠버네티스 내부구조 분석"}},{"node":{"path":"/operations/istio-traffic/","title":"[Service Mesh] Istio 를 통한 동적 트래픽 라우팅"}},{"node":{"path":"/operations/apply-security-to-12st-mall/","title":"12번가 Mall에 토큰인증 적용하기"}},{"node":{"path":"/operations/azure/","title":"Azure Cloud Setup (AKS, ACR 설정)"}},{"node":{"path":"/operations/end-to-end/","title":"12번가 전체 마이크로서비스의 배포"}},{"node":{"path":"/operations/istio-msa-telemetry/","title":"[Service Mesh] MSA 모니터링 w/ Istio addon Grafana"}},{"node":{"path":"/operations/istio-metric-based-hpa/","title":"[Service Mesh] Istio Metrics based HPA"}},{"node":{"path":"/operations/gitops-argo-cd/","title":"[GitOps] Argo CD 를 통한 카나리 배포"}},{"node":{"path":"/development/pubsub-idempotency/","title":"Pub/Sub 방식의 연동 - Choreography with Idempotency"}},{"node":{"path":"/development/understanding-jpa-based-single-microservice/","title":"마이크로서비스 구현 및 동작원리 이해"}},{"node":{"path":"/development/token-based-auth/","title":"JWT Token 기반 인증 인가"}},{"node":{"path":"/development/pubsub-deadline/","title":"Pub/Sub 방식의 연동 - Choreography with Deadline added"}},{"node":{"path":"/development/ops-docker/","title":"Application Packaging with Container (Docker)"}},{"node":{"path":"/development/oauth2with-keycloak/","title":"JWT Token 기반 인증 인가 - Advanced"}},{"node":{"path":"/development/pub-sub/","title":"Pub/Sub 방식의 연동 "}},{"node":{"path":"/development/dp-cqrs/","title":"Data Projection with CQRS"}},{"node":{"path":"/development/monolith-2-misvc/","title":"Req/Res 방식의 MSA 연동 "}},{"node":{"path":"/development/kafka-connect/","title":"CDC(Change Data Capture) with Kafka"}},{"node":{"path":"/development/kafka-scaling/","title":"Kafka Scaling "}},{"node":{"path":"/development/kafka-basic/","title":"Kafka 기본 명령어 "}},{"node":{"path":"/development/kafka-retry-dlq/","title":"Kafka Retry & Dead Letter Queue "}},{"node":{"path":"/development/dp-graphql/","title":"Data Projection with GraphQL"}},{"node":{"path":"/development/gateway/","title":"API Gateway"}},{"node":{"path":"/development/dp-frontend/","title":"Data Projection with Frontend and HATEOAS"}},{"node":{"path":"/development/contract-test/","title":"Contract Test (Consumer Driven Test)"}},{"node":{"path":"/development/cna-start/","title":"단위 마이크로 서비스의 실행 "}},{"node":{"path":"/development/compensation-correlation/","title":"Pub/Sub 방식의 연동 - Compensation 과 Correlation"}},{"node":{"path":"/business/ddd-google-drive/","title":"[이벤트스토밍] - 구글 드라이브 예제"}},{"node":{"path":"/business/","title":"[이벤트스토밍] - 12번가 쇼핑몰 예제"}},{"node":{"path":"/development/circuit-breaker/","title":"Req/Res 방식에서 장애전파 차단 - 서킷브레이커 "}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"[이벤트스토밍] - DDD Food Delivery 예제"}}]}},"context":{}}