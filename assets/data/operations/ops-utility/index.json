{"hash":"49f02bf9a1ddbf017efeb189302ebd145a2955d8","data":{"markdownPage":{"id":"009eb839f718fffeb53756e5b5a3488f","title":"쿠버네티스 유틸리티","description":"","path":"/operations/ops-utility/","timeToRead":3,"content":"<h1 id=\"쿠버네티스-유틸리티\"><a href=\"#%EC%BF%A0%EB%B2%84%EB%84%A4%ED%8B%B0%EC%8A%A4-%EC%9C%A0%ED%8B%B8%EB%A6%AC%ED%8B%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>쿠버네티스 유틸리티</h1>\n<h1 id=\"쿠버네티스-유틸리티-1\"><a href=\"#%EC%BF%A0%EB%B2%84%EB%84%A4%ED%8B%B0%EC%8A%A4-%EC%9C%A0%ED%8B%B8%EB%A6%AC%ED%8B%B0-1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>쿠버네티스 유틸리티</h1>\n<h2 id=\"helm\"><a href=\"#helm\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Helm</h2>\n<p>Helm(패키지 인스톨러) 설치</p>\n<ul>\n<li>Helm 3.x 설치(권장)</li>\n</ul>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 <span class=\"token operator\">></span> get_helm.sh\n<span class=\"token function\">chmod</span> <span class=\"token number\">700</span> get_helm.sh\n./get_helm.sh</code></pre>\n<h2 id=\"kafka-namspace없이\"><a href=\"#kafka-namspace%EC%97%86%EC%9D%B4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kafka (namspace없이)</h2>\n<pre class=\"language-bash\"><code class=\"language-bash\">helm repo <span class=\"token function\">add</span> bitnami https://charts.bitnami.com/bitnami\nhelm repo update\nhelm <span class=\"token function\">install</span> my-kafka bitnami/kafka</code></pre>\n<h2 id=\"kafka-namespace\"><a href=\"#kafka-namespace\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kafka (namespace)</h2>\n<pre class=\"language-bash\"><code class=\"language-bash\">helm repo <span class=\"token function\">add</span> bitnami https://charts.bitnami.com/bitnami\nhelm repo update\nkubectl create ns kafka\nhelm <span class=\"token function\">install</span> my-kafka bitnami/kafka --namespace kafka</code></pre>\n<h3 id=\"kafka-메시지-확인하기--namspace없이\"><a href=\"#kafka-%EB%A9%94%EC%8B%9C%EC%A7%80-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0--namspace%EC%97%86%EC%9D%B4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kafka 메시지 확인하기  (namspace없이)</h3>\n<pre class=\"language-bash\"><code class=\"language-bash\">kubectl run my-kafka-client --restart<span class=\"token operator\">=</span><span class=\"token string\">'Never'</span> --image docker.io/bitnami/kafka:2.8.0-debian-10-r0 --command -- <span class=\"token function\">sleep</span> infinity\nkubectl <span class=\"token builtin class-name\">exec</span> --tty -i my-kafka-client -- <span class=\"token function\">bash</span>\n\n<span class=\"token comment\"># PRODUCER:</span>\nkafka-console-producer.sh <span class=\"token punctuation\">\\</span>\n\t\t--broker-list my-kafka-0.my-kafka-headless.svc.cluster.local:9092 <span class=\"token punctuation\">\\</span>\n\t\t--topic <span class=\"token builtin class-name\">test</span>\n\n<span class=\"token comment\"># CONSUMER:</span>\nkafka-console-consumer.sh --bootstrap-server my-kafka:9092 --topic <span class=\"token builtin class-name\">test</span> --from-beginning</code></pre>\n<h3 id=\"kafka-메시지-확인하기--kafka-namespace\"><a href=\"#kafka-%EB%A9%94%EC%8B%9C%EC%A7%80-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0--kafka-namespace\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kafka 메시지 확인하기  (kafka namespace)</h3>\n<pre class=\"language-bash\"><code class=\"language-bash\">kubectl run my-kafka-client --restart<span class=\"token operator\">=</span><span class=\"token string\">'Never'</span> --image docker.io/bitnami/kafka:2.8.0-debian-10-r0 --namespace kafka --command -- <span class=\"token function\">sleep</span> infinity\nkubectl <span class=\"token builtin class-name\">exec</span> --tty -i my-kafka-client --namespace kafka -- <span class=\"token function\">bash</span>\n\n<span class=\"token comment\"># PRODUCER:</span>\nkafka-console-producer.sh <span class=\"token punctuation\">\\</span>\n\t\t--broker-list my-kafka-0.my-kafka-headless.kafka.svc.cluster.local:9092 <span class=\"token punctuation\">\\</span>\n\t\t--topic <span class=\"token builtin class-name\">test</span>\n\n<span class=\"token comment\"># CONSUMER:</span>\nkafka-console-consumer.sh --bootstrap-server my-kafka.kafka:9092 --topic <span class=\"token builtin class-name\">test</span> --from-beginning</code></pre>\n<h2 id=\"httpie-pod\"><a href=\"#httpie-pod\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>HTTPie Pod</h2>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span>EOF <span class=\"token operator\">|</span> kubectl apply -f -\napiVersion: <span class=\"token string\">\"v1\"</span>\nkind: <span class=\"token string\">\"Pod\"</span>\nmetadata: \n  name: httpie\n  labels: \n    name: httpie\nspec: \n  containers: \n    - \n      name: httpie\n      image: clue/httpie\n      command:\n        - <span class=\"token function\">sleep</span>\n        - <span class=\"token string\">\"36000\"</span>\nEOF</code></pre>\n<p>생성후, 접속:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">kubectl <span class=\"token builtin class-name\">exec</span> -it httpie bin/bash</code></pre>\n<h2 id=\"seige-pod\"><a href=\"#seige-pod\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Seige Pod</h2>\n<pre class=\"language-bash\"><code class=\"language-bash\">kubectl apply -f - <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF\napiVersion: v1\nkind: Pod\nmetadata:\n  name: siege\nspec:\n  containers:\n  - name: siege\n    image: apexacme/siege-nginx\nEOF</span></code></pre>\n<p>생성후, 접속:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">kubectl <span class=\"token builtin class-name\">exec</span> -it siege bin/bash</code></pre>\n<h2 id=\"ebs-csi-driver-install-on-eks-v123-or-higher\"><a href=\"#ebs-csi-driver-install-on-eks-v123-or-higher\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>EBS CSI Driver install on EKS v1.23, or higher</h2>\n<p>먼저, 설치에 필요한 내 클러스터 정보를 설정한다.</p>\n<pre class=\"language-text\"><code class=\"language-text\">export REGION=MY-REGION-CODE\nexport CLUSTER_NAME=MY-CLUSTER-NAME\nexport ROOT_ACCOUNT_UID=123456789012</code></pre>\n<h3 id=\"iam-policy-생성-및-eks-연동\"><a href=\"#iam-policy-%EC%83%9D%EC%84%B1-%EB%B0%8F-eks-%EC%97%B0%EB%8F%99\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>IAM Policy 생성 및 EKS 연동</h3>\n<ul>\n<li>EKS Cluster가 설치되어 있어야 한다.</li>\n<li>클러스터에 대한 IAM OpenID Connect(OIDC) 프로바이더를 먼저 설치한다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">eksctl utils associate-iam-oidc-provider --region=$REGION --cluster=$CLUSTER_NAME --approve</code></pre>\n<ul>\n<li>EBS CSI Driver를 위한 IAM Policy, Role, Cluster Service Account를 생성한다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">eksctl create iamserviceaccount \\\n  --region $REGION \\\n  --name ebs-csi-controller-sa \\\n  --namespace kube-system \\\n  --cluster $CLUSTER_NAME \\\n  --attach-policy-arn arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy \\\n  --approve \\\n  --role-only \\\n  --role-name AmazonEKS_EBS_CSI_DriverRole</code></pre>\n<h3 id=\"ebs-storage-백업을-위한-snapshot-component-생성\"><a href=\"#ebs-storage-%EB%B0%B1%EC%97%85%EC%9D%84-%EC%9C%84%ED%95%9C-snapshot-component-%EC%83%9D%EC%84%B1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>EBS Storage 백업을 위한 Snapshot Component 생성</h3>\n<pre class=\"language-text\"><code class=\"language-text\"># Customresourcedefinition 생성\nkubectl apply -f https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/master/client/config/crd/snapshot.storage.k8s.io_volumesnapshotclasses.yaml\nkubectl apply -f https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/master/client/config/crd/snapshot.storage.k8s.io_volumesnapshotcontents.yaml\nkubectl apply -f https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/master/client/config/crd/snapshot.storage.k8s.io_volumesnapshots.yaml\n\n# Controller 생성\nkubectl apply -f https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/master/deploy/kubernetes/snapshot-controller/rbac-snapshot-controller.yaml\nkubectl apply -f https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/master/deploy/kubernetes/snapshot-controller/setup-snapshot-controller.yaml</code></pre>\n<h3 id=\"csi-driver-add-on-설치\"><a href=\"#csi-driver-add-on-%EC%84%A4%EC%B9%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>CSI-Driver add-on 설치</h3>\n<pre class=\"language-text\"><code class=\"language-text\">eksctl create addon --region $REGION --name aws-ebs-csi-driver --cluster $CLUSTER_NAME --service-account-role-arn arn:aws:iam::$ROOT_ACCOUNT_UID:role/AmazonEKS_EBS_CSI_DriverRole --force</code></pre>\n<h3 id=\"ebs-csi-driver-기반--gp3-storageclass-등록\"><a href=\"#ebs-csi-driver-%EA%B8%B0%EB%B0%98--gp3-storageclass-%EB%93%B1%EB%A1%9D\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>EBS CSI Driver 기반  gp3 StorageClass 등록</h3>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl apply -f - &lt;&lt;EOF\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: ebs-sc\n  annotations:\n    storageclass.kubernetes.io/is-default-class: &quot;true&quot;\nprovisioner: ebs.csi.aws.com\nvolumeBindingMode: WaitForFirstConsumer\nEOF</code></pre>\n<ul>\n<li>기존 gp2기반 Storage Class를 default 해제</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl patch storageclass gp2 -p &#39;{&quot;metadata&quot;: {&quot;annotations&quot;:{&quot;storageclass.kubernetes.io/is-default-class&quot;:&quot;false&quot;}}}&#39;</code></pre>\n<ul>\n<li>설정 확인</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl get sc</code></pre>\n","sidebar":"business","next":"","prev":"","headings":[{"depth":1,"value":"쿠버네티스 유틸리티","anchor":"#쿠버네티스-유틸리티"},{"depth":1,"value":"쿠버네티스 유틸리티","anchor":"#쿠버네티스-유틸리티-1"},{"depth":2,"value":"Helm","anchor":"#helm"},{"depth":2,"value":"Kafka (namspace없이)","anchor":"#kafka-namspace없이"},{"depth":2,"value":"Kafka (namespace)","anchor":"#kafka-namespace"},{"depth":3,"value":"Kafka 메시지 확인하기  (namspace없이)","anchor":"#kafka-메시지-확인하기--namspace없이"},{"depth":3,"value":"Kafka 메시지 확인하기  (kafka namespace)","anchor":"#kafka-메시지-확인하기--kafka-namespace"},{"depth":2,"value":"HTTPie Pod","anchor":"#httpie-pod"},{"depth":2,"value":"Seige Pod","anchor":"#seige-pod"},{"depth":2,"value":"EBS CSI Driver install on EKS v1.23, or higher","anchor":"#ebs-csi-driver-install-on-eks-v123-or-higher"},{"depth":3,"value":"IAM Policy 생성 및 EKS 연동","anchor":"#iam-policy-생성-및-eks-연동"},{"depth":3,"value":"EBS Storage 백업을 위한 Snapshot Component 생성","anchor":"#ebs-storage-백업을-위한-snapshot-component-생성"},{"depth":3,"value":"CSI-Driver add-on 설치","anchor":"#csi-driver-add-on-설치"},{"depth":3,"value":"EBS CSI Driver 기반  gp3 StorageClass 등록","anchor":"#ebs-csi-driver-기반--gp3-storageclass-등록"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/operations/service/","title":"12번가 마이크로서비스 라우터(Service) 생성"}},{"node":{"path":"/operations/ops-service-mesh-istio/","title":"[Service Mesh] Istio"}},{"node":{"path":"/operations/ops-utility/","title":"쿠버네티스 유틸리티"}},{"node":{"path":"/operations/ops-persistence-volume/","title":"파일시스템 (볼륨) 연결과 데이터베이스 설정"}},{"node":{"path":"/operations/ops-readiness/","title":"셀프힐링 & 무정지 배포 실습"}},{"node":{"path":"/operations/ops-kubernetes/","title":"Kubernetes Basic Command"}},{"node":{"path":"/operations/ops-service-mesh-istio-2/","title":"[Service Mesh] Istio-2"}},{"node":{"path":"/operations/ops-pod-status/","title":"Pod 상태값에 따른 마이크로서비스 트러블 슈팅"}},{"node":{"path":"/operations/ops-persistence-volume-efs/","title":"파일공유를 위한 NAS 스토리지 생성과 설정"}},{"node":{"path":"/operations/ops-liveness/","title":"셀프힐링 실습"}},{"node":{"path":"/operations/ops-ingress/","title":"Ingress 를 통한 진입점 통일 - Path-based routing"}},{"node":{"path":"/operations/ops-aws-setting/","title":"AWS Cloud Setup(EKS, ECR 설정)"}},{"node":{"path":"/operations/ops-ingress-virtualhost/","title":"Ingress - Virtual Host based"}},{"node":{"path":"/operations/ops-deploy-my-app/","title":"애플리케이션 패키징,도커라이징,클러스터 배포"}},{"node":{"path":"/operations/ops-autoscale/","title":"Pod Auto Scaling"}},{"node":{"path":"/operations/istio-resiliency-part2/","title":"[Service Mesh] Istio 를 통한 서비스 회복성 Part2 - 서킷브레이커"}},{"node":{"path":"/operations/istio-resiliency-part1/","title":"[Service Mesh] Istio 를 통한 서비스 회복성 Part1 - 타임아웃/재시도"}},{"node":{"path":"/operations/ops-argo-rollout-canary-istio/","title":"[GitOps] Argo Rollout 와 Istio 를 통한 카나리 배포"}},{"node":{"path":"/operations/k8s-monitoring/","title":"MSA 모니터링 with installing Grafana"}},{"node":{"path":"/operations/microservice-logging/","title":"마이크로서비스 통합 로깅 with EFK stack"}},{"node":{"path":"/operations/ops-anatomy-kubernetes/","title":"쿠버네티스 내부구조 분석"}},{"node":{"path":"/operations/istio-traffic/","title":"[Service Mesh] Istio 를 통한 동적 트래픽 라우팅"}},{"node":{"path":"/operations/apply-security-to-12st-mall/","title":"12번가 Mall에 토큰인증 적용하기"}},{"node":{"path":"/operations/azure/","title":"Azure Cloud Setup (AKS, ACR 설정)"}},{"node":{"path":"/operations/end-to-end/","title":"12번가 전체 마이크로서비스의 배포"}},{"node":{"path":"/operations/istio-msa-telemetry/","title":"[Service Mesh] MSA 모니터링 w/ Istio addon Grafana"}},{"node":{"path":"/operations/istio-metric-based-hpa/","title":"[Service Mesh] Istio Metrics based HPA"}},{"node":{"path":"/operations/gitops-argo-cd/","title":"[GitOps] Argo CD 를 통한 카나리 배포"}},{"node":{"path":"/development/pubsub-idempotency/","title":"Pub/Sub 방식의 연동 - Choreography with Idempotency"}},{"node":{"path":"/development/understanding-jpa-based-single-microservice/","title":"마이크로서비스 구현 및 동작원리 이해"}},{"node":{"path":"/development/token-based-auth/","title":"JWT Token 기반 인증 인가"}},{"node":{"path":"/development/pubsub-deadline/","title":"Pub/Sub 방식의 연동 - Choreography with Deadline added"}},{"node":{"path":"/development/ops-docker/","title":"Application Packaging with Container (Docker)"}},{"node":{"path":"/development/oauth2with-keycloak/","title":"JWT Token 기반 인증 인가 - Advanced"}},{"node":{"path":"/development/pub-sub/","title":"Pub/Sub 방식의 연동 "}},{"node":{"path":"/development/dp-cqrs/","title":"Data Projection with CQRS"}},{"node":{"path":"/development/monolith-2-misvc/","title":"Req/Res 방식의 MSA 연동 "}},{"node":{"path":"/development/kafka-connect/","title":"CDC(Change Data Capture) with Kafka"}},{"node":{"path":"/development/kafka-scaling/","title":"Kafka Scaling "}},{"node":{"path":"/development/kafka-basic/","title":"Kafka 기본 명령어 "}},{"node":{"path":"/development/kafka-retry-dlq/","title":"Kafka Retry & Dead Letter Queue "}},{"node":{"path":"/development/dp-graphql/","title":"Data Projection with GraphQL"}},{"node":{"path":"/development/gateway/","title":"API Gateway"}},{"node":{"path":"/development/dp-frontend/","title":"Data Projection with Frontend and HATEOAS"}},{"node":{"path":"/development/contract-test/","title":"Contract Test (Consumer Driven Test)"}},{"node":{"path":"/development/cna-start/","title":"단위 마이크로 서비스의 실행 "}},{"node":{"path":"/development/compensation-correlation/","title":"Pub/Sub 방식의 연동 - Compensation 과 Correlation"}},{"node":{"path":"/business/ddd-google-drive/","title":"[이벤트스토밍] - 구글 드라이브 예제"}},{"node":{"path":"/business/","title":"[이벤트스토밍] - 12번가 쇼핑몰 예제"}},{"node":{"path":"/development/circuit-breaker/","title":"Req/Res 방식에서 장애전파 차단 - 서킷브레이커 "}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"[이벤트스토밍] - DDD Food Delivery 예제"}}]}},"context":{}}