{"hash":"8ec2d2d769250ada18e8c764b3b6b292cc183178","data":{"markdownPage":{"id":"91de8c9e6d37aa4ffef4eec274e7f778","title":"애플리케이션 패키징,도커라이징,클러스터 배포","description":"","path":"/operations/ops-deploy-my-app/","timeToRead":2,"content":"<h1 id=\"애플리케이션-패키징도커라이징클러스터-배포\"><a href=\"#%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%ED%8C%A8%ED%82%A4%EC%A7%95%EB%8F%84%EC%BB%A4%EB%9D%BC%EC%9D%B4%EC%A7%95%ED%81%B4%EB%9F%AC%EC%8A%A4%ED%84%B0-%EB%B0%B0%ED%8F%AC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>애플리케이션 패키징,도커라이징,클러스터 배포</h1>\n<h1 id=\"애플리케이션-패키징도커라이징클러스터-배포-1\"><a href=\"#%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%ED%8C%A8%ED%82%A4%EC%A7%95%EB%8F%84%EC%BB%A4%EB%9D%BC%EC%9D%B4%EC%A7%95%ED%81%B4%EB%9F%AC%EC%8A%A4%ED%84%B0-%EB%B0%B0%ED%8F%AC-1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>애플리케이션 패키징,도커라이징,클러스터 배포</h1>\n<h3 id=\"자바-애플리케이션의-패키징\"><a href=\"#%EC%9E%90%EB%B0%94-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%EC%9D%98-%ED%8C%A8%ED%82%A4%EC%A7%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>자바 애플리케이션의 패키징</h3>\n<ul>\n<li>터미널을 열어서 order 와 delivery, gateway 폴더로 각각 이동하여 아래 명령어를 실행한다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">cd shopmall\ncd order\nmvn package -B -Dmaven.test.skip=true</code></pre>\n<ul>\n<li>target 폴더에 jar 파일이 생성이 되었는지 확인한다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">java -jar target/order-0.0.1-SNAPSHOT.jar</code></pre>\n<p>명령으로 실행이 가능한지 확인한다.</p>\n<ul>\n<li>ctrl+c 를 눌러서 jar 실행에서 빠져 나온다.</li>\n</ul>\n<h3 id=\"도커라이징\"><a href=\"#%EB%8F%84%EC%BB%A4%EB%9D%BC%EC%9D%B4%EC%A7%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>도커라이징</h3>\n<ul>\n<li>order 와 delivery, gateway 의 최상위 root 에 Dockerfile 이 있는지 확인 한다.</li>\n<li>Dockerfile 파일이 있는 경로에서 아래 명령을 실행 한다.  </li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\"> docker login\n docker build -t [dockerhub ID]/order:[오늘날짜] .     \n docker images\n docker push [dockerhub ID]/order:[오늘날짜]  </code></pre>\n<h3 id=\"클러스터에-배포\"><a href=\"#%ED%81%B4%EB%9F%AC%EC%8A%A4%ED%84%B0%EC%97%90-%EB%B0%B0%ED%8F%AC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>클러스터에 배포</h3>\n<h4 id=\"yaml-파일로-배포\"><a href=\"#yaml-%ED%8C%8C%EC%9D%BC%EB%A1%9C-%EB%B0%B0%ED%8F%AC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>yaml 파일로 배포</h4>\n<ul>\n<li>order/kubernetes 폴더내의 deployment.yaml을 오픈한다.</li>\n<li>image: 부분을 push 한 이미지 명으로 수정한다:  [dockerhub ID]/order:[오늘날짜]  </li>\n<li>저장후, 다음명령:</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl apply -f kubernetes/deployment.yml\n\nkubectl apply -f kubernetes/service.yml</code></pre>\n<h4 id=\"명령으로-배포-비추\"><a href=\"#%EB%AA%85%EB%A0%B9%EC%9C%BC%EB%A1%9C-%EB%B0%B0%ED%8F%AC-%EB%B9%84%EC%B6%94\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>명령으로 배포 (비추)</h4>\n<ul>\n<li>\n<p>order 서비스 배포</p>\n<ul>\n<li>kubectl create deploy order --image=[dockerhub ID]/order:latest</li>\n<li>kubectl expose deploy order --port=8080</li>\n</ul>\n</li>\n<li>\n<p>delivery 서비스 배포</p>\n<ul>\n<li>kubectl create deploy delivery --image=[dockerhub ID]/delivery:latest</li>\n<li>kubectl expose deploy delivery --port=8080</li>\n</ul>\n</li>\n<li>\n<p>gateway 서비스 배포</p>\n<ul>\n<li>kubectl create deploy gateway --image=[dockerhub ID]/gateway:latest</li>\n<li>kubectl expose deploy gateway --type=LoadBalancer --port=8080</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"서비스-확인\"><a href=\"#%EC%84%9C%EB%B9%84%EC%8A%A4-%ED%99%95%EC%9D%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>서비스 확인</h3>\n<ul>\n<li>\n<p>게이트웨이 주소 확인</p>\n<ul>\n<li>kubectl get svc\n</li>\n</ul>\n</li>\n<li>\n<p>Pod 생성 확인</p>\n<ul>\n<li>kubectl get po </li>\n</ul>\n</li>\n<li>\n<p>주문 확인</p>\n<pre class=\"language-text\"><code class=\"language-text\">http [gateway IP]:8080/orders\nhttp [gateway IP]:8080/orders productId=1 productName=&quot;TV&quot; qty=3</code></pre>\n</li>\n</ul>\n<h3 id=\"잘-안될때\"><a href=\"#%EC%9E%98-%EC%95%88%EB%90%A0%EB%95%8C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>잘 안될때</h3>\n<ol>\n<li>쿠버네티스 객체 들이 이미 존재하는 경우, 다음을 통하여 객체들을 제거:</li>\n</ol>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl delete deploy --all\nkubectl delete svc --all</code></pre>\n<h3 id=\"더-많은-테스트\"><a href=\"#%EB%8D%94-%EB%A7%8E%EC%9D%80-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>더 많은 테스트</h3>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl delete po --all\n# 한후, 서비스 접속 -&gt; 좀있다가 회복\nkubectl get po   # po가 다시 생성되었음을 확인\n\nkubectl scale deploy order --replicas=3\nkubectl get po \n# order를 위한 pod가 3개가 생성됨을 확인</code></pre>\n<h3 id=\"상세설명\"><a href=\"#%EC%83%81%EC%84%B8%EC%84%A4%EB%AA%85\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>상세설명</h3>\n<iframe width=\"100%\" height=\"100%\" src=\"https://www.youtube.com/embed/0hTlS54gqxA\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n","sidebar":"business","next":"","prev":"","headings":[{"depth":1,"value":"애플리케이션 패키징,도커라이징,클러스터 배포","anchor":"#애플리케이션-패키징도커라이징클러스터-배포"},{"depth":1,"value":"애플리케이션 패키징,도커라이징,클러스터 배포","anchor":"#애플리케이션-패키징도커라이징클러스터-배포-1"},{"depth":3,"value":"자바 애플리케이션의 패키징","anchor":"#자바-애플리케이션의-패키징"},{"depth":3,"value":"도커라이징","anchor":"#도커라이징"},{"depth":3,"value":"클러스터에 배포","anchor":"#클러스터에-배포"},{"depth":4,"value":"yaml 파일로 배포","anchor":"#yaml-파일로-배포"},{"depth":4,"value":"명령으로 배포 (비추)","anchor":"#명령으로-배포-비추"},{"depth":3,"value":"서비스 확인","anchor":"#서비스-확인"},{"depth":3,"value":"잘 안될때","anchor":"#잘-안될때"},{"depth":3,"value":"더 많은 테스트","anchor":"#더-많은-테스트"},{"depth":3,"value":"상세설명","anchor":"#상세설명"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/operations/ops-service/","title":"12번가 마이크로서비스 라우터(Service) 적용"}},{"node":{"path":"/operations/ops-utility/","title":"쿠버네티스 유틸리티"}},{"node":{"path":"/operations/ops-persistence-volume/","title":"파일시스템 (볼륨) 연결과 데이터베이스 설정"}},{"node":{"path":"/operations/ops-service-mesh-istio/","title":"[Service Mesh] Istio"}},{"node":{"path":"/operations/ops-readiness/","title":"무정지 배포 실습"}},{"node":{"path":"/operations/ops-kubernetes/","title":"Kubernetes Basic Commands"}},{"node":{"path":"/operations/ops-liveness/","title":"셀프힐링 실습"}},{"node":{"path":"/operations/ops-aws-setting/","title":"AWS Cloud Setup(EKS, ECR 설정)"}},{"node":{"path":"/operations/ops-ingress-virtualhost/","title":"Ingress - Virtual Host based"}},{"node":{"path":"/operations/ops-anatomy-kubernetes/","title":"쿠버네티스 내부구조 분석"}},{"node":{"path":"/operations/ops-ingress/","title":"Ingress 를 통한 진입점 통일 - Path-based routing"}},{"node":{"path":"/operations/ops-autoscale/","title":"Pod Auto Scaling"}},{"node":{"path":"/operations/ops-deploy-my-app/","title":"애플리케이션 패키징,도커라이징,클러스터 배포"}},{"node":{"path":"/operations/msa-logging/","title":"MSA 로깅 with EFK Stack"}},{"node":{"path":"/operations/k8s-monitoring/","title":"MSA 모니터링 with installing Grafana"}},{"node":{"path":"/operations/ops-argo-rollout-canary-istio/","title":"[GitOps] Argo Rollout 와 Istio 를 통한 카나리 배포"}},{"node":{"path":"/operations/istio-msa-telemetry/","title":"[Service Mesh] MSA 모니터링 w/ Istio addon Grafana"}},{"node":{"path":"/operations/istio-resiliency-part2/","title":"[Service Mesh] Istio 를 통한 서비스 회복성 Part2 - 서킷브레이커"}},{"node":{"path":"/operations/istio-traffic/","title":"[Service Mesh] Istio 를 통한 동적 트래픽 라우팅"}},{"node":{"path":"/operations/istio-resiliency-part1/","title":"[Service Mesh] Istio 를 통한 서비스 회복성 Part1 - 타임아웃/재시도"}},{"node":{"path":"/operations/azure/","title":"Azure Cloud Setup (AKS, ACR 설정)"}},{"node":{"path":"/operations/istio-metric-based-hpa/","title":"[Service Mesh] Istio Metrics based HPA"}},{"node":{"path":"/development/keycloak-oauth2-2/","title":"Pub/Sub 방식의 연동 (New)"}},{"node":{"path":"/operations/gitops-argo-cd/","title":"[GitOps] Argo CD 를 통한 카나리 배포"}},{"node":{"path":"/operations/end-to-end/","title":"12번가 전체 마이크로서비스의 배포"}},{"node":{"path":"/operations/apply-security/","title":"12번가 Mall에 토큰인증 적용하기"}},{"node":{"path":"/development/oauth2withkeycloak/","title":"Req/Res 방식에서 장애전파 차단 - 서킷브레이커 (New)"}},{"node":{"path":"/development/keycloak-oauth2-3/","title":"Pub/Sub 방식의 연동 - Compensation 과 Correlation (New)"}},{"node":{"path":"/development/oauth2/","title":"Req/Res 방식의 MSA 연동 (New)"}},{"node":{"path":"/development/monolith2misvc/","title":"Kafka Retry & Dead Letter Queue (New)"}},{"node":{"path":"/development/kafka-retry-dlq/","title":"Application Packaging with Container (Docker)"}},{"node":{"path":"/development/gateway/","title":"단위 마이크로 서비스의 실행 (New)"}},{"node":{"path":"/development/kafka-manual-commit/","title":"Data Projection with CQRS"}},{"node":{"path":"/development/keycloak-oauth2-1/","title":"Kafka 기본 명령어 (New)"}},{"node":{"path":"/development/kafka-scaling/","title":"Data Projection with GraphQL"}},{"node":{"path":"/development/cna-pubsub/","title":"JWT Token 기반 인증 인가 - Advanced"}},{"node":{"path":"/development/kafka-base/","title":"JWT Token 기반 인증 인가"}},{"node":{"path":"/development/cna-pubsub2/","title":"Data Projection with Frontend and HATEOAS"}},{"node":{"path":"/development/front-end/","title":"Kafka Scaling (New)"}},{"node":{"path":"/development/circuitbreaker/","title":"API Gateway"}},{"node":{"path":"/business/","title":"[분석] DDD 이벤트의 도출 - 12번가 쇼핑몰"}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"[이벤트스토밍] DDD Food Delivery 예제"}},{"node":{"path":"/development/advanced-connect/","title":"Contract Test (Consumer Driven Test)"}},{"node":{"path":"/business/ddd-google-drive/","title":"[이벤트스토밍] DDD 구글 드라이브 예제"}}]}},"context":{}}